<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随写 - XinoAssassin&#39;s Blog</title>
  
  <subtitle>Write Everything</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="https://blog.xinoassassin.me/"/>
  <updated>2019-05-16T12:53:37.405Z</updated>
  <id>https://blog.xinoassassin.me/</id>
  
  <author>
    <name>XinoAssassin Ni</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>十二年，十二季，277集。</title>
    <link href="https://blog.xinoassassin.me/2019/05/the-big-bang-theory/"/>
    <id>https://blog.xinoassassin.me/2019/05/the-big-bang-theory/</id>
    <published>2019-05-16T12:53:37.000Z</published>
    <updated>2019-05-16T12:53:37.405Z</updated>
    
    <content type="html"><![CDATA[<p>还有一天，一部陪伴了很多人许多年的“新经典”美式喜剧就将要迎来它最后的结局了。<em>The Big Bang Theory</em>，国内通称《生活大爆炸》，这部于 2007 年开始播映的情景喜剧创造了许多在当代年轻人中脍炙人口的经典角色，在那个 Nerds 或者说 Geeks 还在普遍不被理解、甚至被嘲笑的年代里，《生活大爆炸》却勇敢地塑造了四位“怪咖”作为剧集主角，并且在台词中掺入了无数晦涩难懂的科学名词。但就是这样一部颇具硬核精神的喜剧，在两季之后，名声响彻全球。</p><p>在今天已经不用再对《生活大爆炸》的剧情做过多地介绍了，简单的说就是两个年轻科学家合租之后遇到了住在隔壁的普通年轻女孩后发生的一系列故事。十二年来，我们一路看着这些角色们成长，受挫折，找到自己的另一半，结婚……这 277 集故事，就如同一部充满着日常的长篇流水账小说一般，平淡又不缺少必要的起伏。而作为喜剧，《生活大爆炸》从来不缺乏的就是辛辣的讽刺，恰好，作为主角的谢尔顿最令人印象深刻的就是他的毒舌，编剧们借这几位怪咖之口讥讽了包括但不限于政界、学界、商界，在国内甚至因为许多台词过于敏感而被下架，至今仍没有正规的渠道可以观看它。</p><p>如果问起《生活大爆炸》你最先想到的哪个角色，那我估计有 80% 的观众一定会说是谢尔顿。这个让所有观众又爱又恨的角色是整部剧集的核心人物，给他设定超高智商与超低情商似乎在隐喻着历史上许多有着怪才之名的人物，而这种“怪”被编剧和演员诠释的淋漓尽致，他自负自大却对室友以及朋友有着奇葩而又严苛的要求，但他善良的本性与很多时候略带稚气的处事方式又让人对他生不起气来。十二季中，最明显的不过是他的成长，从最开始不食人间烟火，到逐渐的开始懂得人情世故、结识朋友找到真爱，在他的成长中有许许多多感动人的温情瞬间。这样一个略带夸张成分的角色塑造之成功，甚至成为了一种流行文化的代号，连他的穿衣方式——里长袖外短袖也被人争相模仿。而饰演他的吉姆·帕森斯也多次艾美奖最佳男主角，这也是对于他能够驾驭好谢尔顿这样一个高难度角色的最好证明与奖励了。<br><img src="&quot;/images/Snipaste_2019-05-15_17-26-36.png&quot;" alt=""></p><p>不过《生活大爆炸》是一部群像剧，每个人都是有血有肉的，在长达 277 集的时间里，几乎每个角色都有能够充分演绎自己的舞台。比如四个怪咖中的另一“对”——Howard &amp; Raj 更像是这部剧中的搞笑和逗逼担当，但是他们之间那种超越了一般朋友的友情没有因为他们不是核心主角而被掩盖，相反的，编剧在他们两人的感情身上花费了相当多的笔墨，他们喜欢互相使绊，也争吵过、疏远过，但每一次又都重归于好，这是多么令人羡慕的一段铁关系。而除了以上提到的三人，四个怪咖中也许是最为正常的 Leonard 追到 Penny 的故事也是一段传奇，也许你不喜欢看有很重感情线的剧，但是《生活大爆炸》中的感情戏拌着喜剧元素，以不多的量恰好满足观众又不腻，也给主角之外的人们足够多的戏份来讲述他们自己的故事，这是这部群像剧成功之处。<br><img src="&quot;/images/Snipaste_2019-05-15_17-42-10.png&quot;" alt=""><br>2007 年，恰好是乔布斯和他的苹果公司推出第一代 iPhone 的那一年，我们甚至可以在整部剧集中回顾 iPhone 的发展史。而这十二年中就像剧名中的 Big Bang 一词一样，新兴的信息世界呈现出了指数级别的增长。同样的，作为数码潮流文化尤其是游戏文化的弄潮儿，这类话题不曾离开过《生活大爆炸》的舞台，我们不时就可以在剧中看到主角们聚在一起打着游戏。而对于游戏主机，从 Xbox 360 到 Wii，再到次世代登场，那年的 Xbox One 的命名以及主机硬件配置甚至被谢尔顿整整吐槽了两分钟。他和 Amy 在 Xbox One 和 PS4 之间犯选择困难症的样子也是那年许多欧美玩家的代表。<br><img src="&quot;/images/Snipaste_2019-05-15_14-46-54.png&quot;" alt=""><br>对于大众文化，作为剧集中设定为八十年代生人的几位主角，从小观看的便是以《星球大战》、《星际迷航》等为代表的科幻元素影视剧。《生活大爆炸》中充满了各种星战和超级英雄梗，谢尔顿的 T 恤图案常常就与这些元素有关，有不少国内外观众可能也是通过《生活大爆炸》才开始对这些文化感兴趣进而入坑。</p><p>《生活大爆炸》最为人津津乐道的一点就是它对于科学严谨性的尊重，作为一    部轻松向的喜剧，在这方面却狠下了一番功夫，甚至设立了科学顾问的职位，剧中出现的各种方程式、科学名词都是经过检验推敲的。而主演中更是有货真价实的博士——Amy 的扮演者，神经生物学博士马伊姆·拜力克在剧中本色出演，连剧中她的实验室中的各种仪器都是她指定给剧组的。</p><p>天下终究没有不散的筵席，故事线随着谢尔顿在十一季最后一集与 Amy 正式结婚似乎已经交代的差不多了，大家都意识到了可能我们已经离《生活大爆炸》的结局不远了，可是在官方正式宣布就只剩一季的时候，还是甚感惊讶。这些陪伴我们度过了好多年的家伙们就要离开了，这可能是许许多多追长剧的观众们在每次剧集完结之时一定会感叹的事情。我想，可能在十年后的某一天，我会坐下来，磕着瓜子，随手点开硬盘里收藏的一集《生活大爆炸》一路看下去，重温这个给人嬉笑又给人温情的故事。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;还有一天，一部陪伴了很多人许多年的“新经典”美式喜剧就将要迎来它最后的结局了。&lt;em&gt;The Big Bang Theory&lt;/em&gt;，国内通称《生活大爆炸》，这部于 2007 年开始播映的情景喜剧创造了许多在当代年轻人中脍炙人口的经典角色，在那个 Nerds 或者说 Ge
      
    
    </summary>
    
    
      <category term="Entertainment" scheme="https://blog.xinoassassin.me/tags/Entertainment/"/>
    
  </entry>
  
  <entry>
    <title>PC 硬件史话（二）</title>
    <link href="https://blog.xinoassassin.me/2019/03/pc-hardware-history-2/"/>
    <id>https://blog.xinoassassin.me/2019/03/pc-hardware-history-2/</id>
    <published>2019-03-31T14:55:23.000Z</published>
    <updated>2019-03-31T15:06:14.207Z</updated>
    
    <content type="html"><![CDATA[<h2 id="导语"><a href="#导语" class="headerlink" title="导语"></a>导语</h2><p>这期史话笔者将视点从 CPU 这个单一元件转移开，来讲讲 PC 标准出现前的那些故事。</p><h2 id="DEC-与小型机"><a href="#DEC-与小型机" class="headerlink" title="DEC 与小型机"></a>DEC 与小型机</h2><p>Minicomputer，中文中多称为小型机，用今天的眼光来看，小型机其实并不小，大多数都还是有个立柜那么大。不过在微型计算机出现之前，小型机占据了计算机市场的大半江山，而要说起小型机，不得不提的就是影响了整个计算机历史的 PDP 系列和它背后的创造者—— DEC 公司。</p><h3 id="从-TX-0-到-PDP-1"><a href="#从-TX-0-到-PDP-1" class="headerlink" title="从 TX-0 到 PDP-1"></a>从 TX-0 到 PDP-1</h3><p>让我们把时间倒回到上世纪四五十年代，现代计算机刚诞生不久的时候。那时的计算机动辄几个书柜的大小，更大的可能占据几个房间，并且造价普遍十分昂贵。而从六十年代开始，随着晶体管和集成电路的大规模应用，计算机开始了小型化之路。首先出现的，是 1956 年由麻省理工学院林肯实验室<em>（MIT Lincoln Laboratory）</em>研发出的首台全晶体管计算机—— TX-0，这台计算机不久之后被 MIT “借走”拿去当教学仪器了。</p><p><img src="/images/tx-0.jpg" width="40%"></p><p style="text-align: center;">TX-0</p><p>随后，两名 TX-0 的工程师肯·奥尔森（Ken Olsen） 和 Harlan Anderson 在 MIT 注意到了一个奇怪的现象：明明学院里有同样提供给学生用并且更快的 IBM 的大型计算机，但学生就是喜欢在 TX-0 那儿排长长的队伍来尝试一下它。思索之后，他们认为小型计算机是有市场前景的，并且不是所有人都需要大型机那么强的性能，对于某些特定用途，低成本的解决方案就可以满足需求了；还有些用户往往更在意机器的图形输出或是实时可操作性而非机器的性能。</p><p>于是在 1957 年，TX-2 项目遇到严重困难之后，他们便离开了实验室，想用自己的理念拉到投资来推出产品。然而当时业界并不景气，小公司不断成立又破产，而诸如 RCA 和通用电气之类的大公司在计算机市场也讨不到好处。他们千辛万苦才拉到美国研究发展公司<em>（American Research and Development Corporation）</em>公司的投资，不过投资人 Georges Doriot 出于对市场的担心，要求他们变更原来的商业计划，把重心少放在计算机业务上一点，甚至还要求他们把公司的名字从原来的「数字计算机公司<em>（Digital Computer Corporation）</em>」改成了「数字装备公司<em>（Digital Equipment Corporation）</em>」（后文简称 DEC）。</p><p>没有办法，公司开头只能听投资人的，DEC 开始生产名为「数字实验室模块」的系列产品，这是一种集成了电子元件和晶体管的电路板，可以用来组建计算机。结果推出之后还挺受其他计算机公司欢迎的，他们买来组建测试自己系统的设备，在不景气的五十年代末期，这个产品线让刚成立的 DEC 开始盈利了。</p><p><img src="/images/dec-digital-laboratory-module-hp-computerhistory.jpg" alt="DEC Digital Laboratory Modules"></p><p style="text-align: center;">数字实验室模块</p><p>有了成功的产品线之后，DEC 开始将重心重新转回他们最初想做的小型机上。很快，在 1959 年末，采用新设计的计算机诞生了，同样为了规避风险，新的计算机的命名避开了 Computer 一词，新造了「可编程数据处理器<em>（Programmed Data Processor）</em>」这样一个有些拗口的名词。新的机器是系列第一台，即为 PDP-1，比起它需要占用半个房间的祖先 TX-0 来说，它小了很多，而性能却更强。它还拥有一块配套的 CRT 显示器，具有高速显示点阵的能力，用特殊的指令就可以让上面显示图片，这也是最早具有图形显示能力的机型之一。后来在 1961 年 9 月，DEC 向 MIT 捐赠了一台 PDP-1，就摆在 TX-0 的旁边。</p><p>PDP-1 的特殊意义不仅仅在于它的小型化上，更在于更深远的文化层面上。这款机型不但推动了黑客文化的发展，还孕育出了最早的电脑游戏——《太空大战<em>（Spacewar!）</em>》。对于软件领域来说，它更是意义非凡——一系列直到如今我们都仍在使用的软件类型的开山鼻祖就是在 PDP-1 上开发运行的，比如最早的文本编辑器（Notepad 记事本类），最早的文字处理器（文字排版类软件），最早的可交互式调试工具和最早可稳定运行的国际象棋程序等。</p><p><img src="/images/Steve_Russell_and_PDP-1.png" alt="PDP-1"></p><p style="text-align: center;">计算机历史博物馆中的 PDP-1 和《太空大战》的创造者史蒂夫·拉塞尔</p><h3 id="PDP-8-和-PDP-11"><a href="#PDP-8-和-PDP-11" class="headerlink" title="PDP-8 和 PDP-11"></a>PDP-8 和 PDP-11</h3><p>在 PDP-1 推出之后 DEC 没有停歇，用今天的话来说就是疯狂刷机型，1960 年 PDP-3，1962年 PDP-4，1963 年 PDP-5，1964 年 PDP-7。这其中有的销售不佳，如 PDP-4 就非常惨淡，而 PDP-6 项目则直接因为市场反映不佳而直接搁浅；但继续走小型化之路的 PDP-5 却非常受市场欢迎。于是，秉承着 PDP-5 的理念，在此基础上进行大幅度改进的 PDP-8 被刷出来了。</p><p><img src="/images/pdp-8.jpg" alt="pdp-8"></p><p style="text-align: center;">PDP-8</p><p>1965 年 3 月 22 日，PDP-8 发布，这是一台可以放在桌上使用的小型机，比起它的前辈们，在性能上可能有所不足，但是它足够“小”，而且更便宜：它标价 18500 美元，是首台售价低于两万美元的小型机，后续的 PDP-8/S 甚至卖到了一万美元之下，这在当时的市场如同一颗价格炸弹一般。而市场的反映也证明了人们对它的喜爱：PDP-8 系列产品一共卖出去了 30 万台，直接推动了 DEC 在上世纪六十年代中后期到七十年代中期称霸小型机市场。</p><p>之后在 1970 年，DEC 推出了 PDP 系列中销量最高的机型——PDP-11，这同样也是一台无论在硬件还是软件方面都对后世有着深远影响的机器：硬件方面，PDP-11 的架构设计影响了整个后七十年代的微处理器的设计，包括 Intel 的 x86 系列处理器和摩托罗拉那著名的 68k 系列处理器；而在软件上，今天互联网世界的基石之一——Unix 系统的首次正式出现，就是在 PDP-11 上面；还有后来流行的 CP/M 及其后继者 DOS 系统等，均受到了 PDP-11 原生系统的启发。正是因为 PDP-11 优秀的、满足时代需求并有些超前的设计，使得 PDP-11 从 1970 年问世一直卖到了九十年代，总共销售六十多万台，被不少评论家誉为“最受欢迎的小型机”，比尔·盖茨曾在他的简历里着重提到过有 PDP-11 的编程经验。</p><p><img src="/images/PDP-11.jpg" alt="PDP-11"></p><p style="text-align: center;">PDP-11</p><h3 id="DEC-与今世"><a href="#DEC-与今世" class="headerlink" title="DEC 与今世"></a>DEC 与今世</h3><p>说到这里，让我们回头看看 DEC 创始人在 TX-0 前做出的思考，他们对于计算机小型化趋势的判断是多么的精准，而除了这点之外，DEC 还对今世有着非常重大的间接贡献，比如：</p><ul><li>与 C 语言的渊源<br>Unix 最早是用 PDP-7 的汇编语言写成的（当时还没有一个正式名字），为了移植到 PDP-11 上面，核心开发人员不断开发改进新的编程语言，而 C 语言就是这一阶段性完成产物，直到今天 C 语言标准中仍残留有 PDP-11 指令的痕迹。</li><li>与 Windows NT 的渊源<br>在 PDP 系列之后，DEC 继续推出了 VAX 系列，他们将其称之为超级小型机（Superminicomputer）。VAX 系列上运行的系统是重新设计编写的 VMS，其核心设计师戴夫·卡特勒（Dave Cutler）后来被微软招入麾下并领导了 Windows NT 的开发，他把 VMS 的不少理念带入到了 NT 上，甚至后来有说法称 Windows NT 是 VMS 的重新改进版本，而 NT 内核也一直被微软沿用至今。值得一提的是，戴夫·卡特勒后来还领导开发了 Azure 平台，再后来设计了 Xbox One 的系统架构。</li></ul><p><img src="/images/VAX-11-750.jpg" width="60%"></p><h3 id="巅峰与衰亡"><a href="#巅峰与衰亡" class="headerlink" title="巅峰与衰亡"></a>巅峰与衰亡</h3><p>不过有句话说的好：“王权没有永恒”，这句话同样可以套用在 DEC 身上。回首上一篇文章，PDP-11 推出之后不久，Intel 的 8008 就登上了舞台，单片式微处理器技术的成熟使得计算机行业掀起了一波更加汹涌的微型（Micro）化浪潮，其结果直接导致了微型计算机（Microcomputer），也就是我们现在使用的这代计算机的成熟和普及。而 DEC 作为小型化的先锋，却抗拒着新的浪潮。</p><p>1974 年，公司的研发组已经证明了微机的可行性，甚至给出了两台原型机，然而奥尔森却选择中断了这项企划。1977 年，DEC 又同样拒绝了开发个人电脑的提案，奥尔森甚至说「个人没有理由在家里放台计算机<em>（There is no reason for any individual to have a computer in his home.）</em>（后来他澄清他说的 Computer 指代的不是现代意义上的 PC）」。</p><p>历史证明了 DEC 选择了一条错误的道路。八十年代初期，在看到 IBM PC 大获成功之后，他们才迟迟推出自家类似的系统，但 PC 业界最经典的定律已经开始生效了——不兼容就会死。DEC 的新品不兼容 IBM PC 标准，没办法直接运行当时需求最猛的电子表格软件 Lotus 1-2-3，他们的新系列叫好不叫座，这也为日后 DEC 的衰败埋下了伏笔。</p><p>八十年代中期，PDP-11 以及后继者 VAX 系列的畅销将 DEC 带上了巅峰，市值超过 2 亿美元，拥有十万雇员，是计算机业界仅次于 IBM 的巨擘，甚至可以撼动它的位置。不过巅峰之后便是下坡路，微机市场打不过 PC，小型机市场也开始被新入场的对手蚕食，管理层昏招频出，大量资金竹篮打水一场空，而原有的不少合作伙伴纷纷离去。</p><p>九十年代开始，DEC 已经尽显颓势，经历了各种分拆之后的公司最终于 1998 年 6 月份被当时业界最牛的康柏（Compaq）收购了。</p><h2 id="IBM-PC-出现前的洪荒年代"><a href="#IBM-PC-出现前的洪荒年代" class="headerlink" title="IBM PC 出现前的洪荒年代"></a>IBM PC 出现前的洪荒年代</h2><p>愈演愈烈的微型化革命年代里，可谓是群雄四起。1972 年末，一家法国公司用 Intel 8008 为核心开发出了一款计算机，并用了 “Micro-ordinateur” 作为它的注册商标，在英语中，这个词等价于 Microcomputer。不过发明这个词的人并不是他们，而是大名鼎鼎的艾萨克·阿西莫夫（Isaac Asimov），他在 1956 年的短篇小说 <em>The Dying Night</em> 就已经使用了这个词。</p><p>Intel 8008 似乎特别受欢迎，早期的微机大多采用了 8008 作为他们机型的中央处理器。1974 年 4 月，Intel 发布了 8008 的加强版——8080。就是这枚处理器，真正拉开了微机普及的序幕。</p><h3 id="Altair-8800"><a href="#Altair-8800" class="headerlink" title="Altair 8800"></a>Altair 8800</h3><p>现在一般认为的首台商业成功的微型计算机就是 MITS 公司在 1974 年出品的 Altair 8800，而且这是 MITS 转型做计算机之后的第一个产品，在这之前 MITS 的主营产品是计算器。1972 年，由于 TI 的强势介入，计算器市场不好混了，MITS 的老板艾德·罗伯茨（Ed Roberts）决定转型去做计算机。1974 年他选定了当时刚发布不久的 Intel 8080 作为中央处理器，不过因为 8080 的官方定价略高，决心做平价计算机的罗伯茨跑去跟 Intel 砍价，他有着多年的 OEM 采购经验，谈价很厉害；而 Intel 那时候主营业务还是存储芯片，不懂小批量微处理器的定价。所以最终罗伯茨成功地把单片价格从 360 美元谈到了 75 美元。</p><p>十月份，他们完成了第一台原型机，并快递给了《大众电子<em>（Popular Electronics)</em>》杂志社，结果不巧的是，他们撞上了快递公司的罢工潮，杂志社并没有收到这台原型机。幸好，他们提前联系的杂志编辑手上已经有了不少这台机器的照片，于是在当年年末出版的杂志封面上，Altair 8800 正式登场了，这是一台可扩展的实用微型计算机，整台机器只需 439 美元！<br><img src="/images/Popular_Electronics_Cover_Jan_1975.jpg" alt="Popular_Electronics_Cover_Jan_1975"></p><p>七十年代初，计算器和电子游戏的普及让大众认知了计算机的威力，而数字化产品也吸引着越来越多的电子爱好者。于是这么一台平价但是实用，而且扩展性还不赖的机器一上市就火了。这是罗伯茨自己也没想到的事情，原本他预想能卖 800 台已经很不错了，结果一个月内他们就收到了一千份订单，五月末的时候这个数字已经变成了 2500 台，到了八月，这个数字又翻了一番，还有不少订单是直接买组装好的机器。</p><p>而在 Altair 8800 身上最出名的故事可能已经为很多人所熟知了：我们亲爱的比尔·盖茨和他的好友保罗·艾伦为它开发了一套 BASIC 语言解译器，并察觉到了软件行业存在的巨大机遇，随后便创立了 Micro-Soft。<br><img src="/images/altair-8800.jpg" alt="img"></p><p>在 Altair 8800 之后，许多公司察觉到了新的商机，于是乎类似的微型计算机如雨后春笋般开始出现，它们大多采用一块 8bit 的处理器比如 Intel 的 8080 或者 Zilog 的 Z80，采用了兼容 Altair 8800 的 S-100 总线，运行着 CP/M 之类的操作系统。在这波创业大潮中，就有苹果电脑公司，他们的 Apple II 获得了巨大的成功。也是摆这股潮流所赐，越来越多小公司也能用得起计算机来做数据库管理、会计还有文字排版之类的活。</p><p><img src="/images/Apple_II.jpg" width="60%"></p><p>不过最终使得微机走入千家万户的，还是有请我们的主角——PC。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>所谓合久必分，分久必合，微型计算机野蛮生长了足够长的时间了，是时候该有人出来一统江湖了！</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.computerhistory.org/pdp-1" target="_blank" rel="noopener">PDP-1 Restoration Project</a></li><li><a href="http://www.computer-history.info/Page4.dir/pages/PDP.1.dir/index.html" target="_blank" rel="noopener">The PDP-1</a></li><li><a href="https://www.bell-labs.com/usr/dmr/www/chist.html" target="_blank" rel="noopener">The Development of the C Language</a></li><li><a href="https://xueqiu.com/3993902801/83078596" target="_blank" rel="noopener">DEC创始人、小型机之父：肯·奥尔森</a></li><li><a href="https://www.computerhistory.org/revolution/minicomputers/11/331" target="_blank" rel="noopener">DEC’s Blockbuster: The PDP-8 - CHM Revolution</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;导语&quot;&gt;&lt;a href=&quot;#导语&quot; class=&quot;headerlink&quot; title=&quot;导语&quot;&gt;&lt;/a&gt;导语&lt;/h2&gt;&lt;p&gt;这期史话笔者将视点从 CPU 这个单一元件转移开，来讲讲 PC 标准出现前的那些故事。&lt;/p&gt;
&lt;h2 id=&quot;DEC-与小型机&quot;&gt;&lt;a h
      
    
    </summary>
    
    
      <category term="Hardware History" scheme="https://blog.xinoassassin.me/tags/Hardware-History/"/>
    
  </entry>
  
  <entry>
    <title>我的 Tools 文件夹中都有什么</title>
    <link href="https://blog.xinoassassin.me/2019/03/what-my-tools-folder-contains/"/>
    <id>https://blog.xinoassassin.me/2019/03/what-my-tools-folder-contains/</id>
    <published>2019-03-23T07:59:06.000Z</published>
    <updated>2019-03-24T06:53:41.943Z</updated>
    
    <content type="html"><![CDATA[<p>写点白开水文，这次介绍一下我存续最久的工具目录中都有些啥，按字母排序</p><h2 id="AcDown"><a href="#AcDown" class="headerlink" title="AcDown"></a><a href="https://archive.codeplex.com/?p=acdown" target="_blank" rel="noopener">AcDown</a></h2><p>充满时代感的名字，早已经没有后续更新，作者 <a href="https://weibo.com/kaedei" target="_blank" rel="noopener">Kaedei</a> 后来去做了弹弹Play</p><h2 id="Aegisub"><a href="#Aegisub" class="headerlink" title="Aegisub"></a><a href="http://www.aegisub.org/" target="_blank" rel="noopener">Aegisub</a></h2><p>老牌的字幕打轴制作软件</p><h2 id="AIDA64"><a href="#AIDA64" class="headerlink" title="AIDA64"></a><a href="https://www.aida64.com/" target="_blank" rel="noopener">AIDA64</a></h2><p>老牌的 PC 整体检测软件</p><h2 id="aMule"><a href="#aMule" class="headerlink" title="aMule"></a><a href="http://www.amule.org" target="_blank" rel="noopener">aMule</a></h2><p>开源 ED2K 协议下载器<br>其实国内的 ED2K 网络并没彻底死，还是有人在用的</p><h2 id="aria2"><a href="#aria2" class="headerlink" title="aria2"></a><a href="https://aria2.github.io/" target="_blank" rel="noopener">aria2</a></h2><p>全平台命令行下载器，配合图形化前端食用更佳</p><h2 id="AS-SSD-Benchmark"><a href="#AS-SSD-Benchmark" class="headerlink" title="AS SSD Benchmark"></a><a href="https://www.alex-is.de" target="_blank" rel="noopener">AS SSD Benchmark</a></h2><p>SSD 跑分软件</p><h2 id="BDinfo"><a href="#BDinfo" class="headerlink" title="BDinfo"></a><a href="https://www.videohelp.com/software/BDInfo" target="_blank" rel="noopener">BDinfo</a></h2><p>BD 原盘信息查看工具</p><h2 id="BIND"><a href="#BIND" class="headerlink" title="BIND"></a><a href="https://www.isc.org/downloads/bind/" target="_blank" rel="noopener">BIND</a></h2><p>一套关于 DNS 的工具集，其中我常用 dig</p><h2 id="CascView"><a href="#CascView" class="headerlink" title="CascView"></a><a href="http://www.zezula.net/en/casc/main.html" target="_blank" rel="noopener">CascView</a></h2><p>暴雪目前常用的 .casc 格式文件查看器</p><h2 id="Cinebench"><a href="#Cinebench" class="headerlink" title="Cinebench"></a><a href="https://www.maxon.net/en/products/cinebench-r20-overview/" target="_blank" rel="noopener">Cinebench</a></h2><p>跑分</p><h2 id="Cisco-TFTP-Server"><a href="#Cisco-TFTP-Server" class="headerlink" title="Cisco TFTP Server"></a>Cisco TFTP Server</h2><p>思科出品的 TFTP 服务器</p><h2 id="CPU-Z"><a href="#CPU-Z" class="headerlink" title="CPU-Z"></a><a href="https://www.cpuid.com/softwares/cpu-z.html" target="_blank" rel="noopener">CPU-Z</a></h2><p>老牌 CPU 检测工具</p><h2 id="Crass"><a href="#Crass" class="headerlink" title="Crass"></a><a href="http://galcrass.blog124.fc2blog.us/" target="_blank" rel="noopener">Crass</a></h2><p>痴汉公贼开发的通用 GALGAME 资源提取器，已停止更新</p><h2 id="CriPackTools"><a href="#CriPackTools" class="headerlink" title="CriPackTools"></a><a href="https://github.com/esperknight/CriPakTools" target="_blank" rel="noopener">CriPackTools</a></h2><p>CRIWARE 的 CPK 格式文件解压器</p><h2 id="CrystalDiskInfo"><a href="#CrystalDiskInfo" class="headerlink" title="CrystalDiskInfo"></a><a href="https://crystalmark.info/en/software/crystaldiskinfo/" target="_blank" rel="noopener">CrystalDiskInfo</a></h2><p>老牌硬盘状态查看器，S.M.A.R.T. 查看好手</p><h2 id="CrystalDiskMark"><a href="#CrystalDiskMark" class="headerlink" title="CrystalDiskMark"></a><a href="https://crystalmark.info/en/software/crystaldiskmark/" target="_blank" rel="noopener">CrystalDiskMark</a></h2><p>老牌硬盘跑分工具</p><h2 id="CTF-Tool"><a href="#CTF-Tool" class="headerlink" title="CTF Tool"></a><a href="http://wololo.net/talk/viewtopic.php?t=39000" target="_blank" rel="noopener">CTF Tool</a></h2><p>PSP 主题文件修改器</p><h2 id="Display-Driver-Uninstaller"><a href="#Display-Driver-Uninstaller" class="headerlink" title="Display Driver Uninstaller"></a><a href="https://www.wagnardsoft.com/forums/viewforum.php?f=5" target="_blank" rel="noopener">Display Driver Uninstaller</a></h2><p>Windows 的显卡驱动完整清除工具</p><h2 id="de4dot"><a href="#de4dot" class="headerlink" title="de4dot"></a><a href="https://github.com/0xd4d/de4dot" target="_blank" rel="noopener">de4dot</a></h2><p>.NET 程序反混淆和解包工具</p><h2 id="Detect-It-Easy"><a href="#Detect-It-Easy" class="headerlink" title="Detect It Easy"></a><a href="http://ntinfo.biz/index.html" target="_blank" rel="noopener">Detect It Easy</a></h2><p>程序包识别工具</p><h2 id="DiskGenius"><a href="#DiskGenius" class="headerlink" title="DiskGenius"></a><a href="http://www.diskgenius.cn/" target="_blank" rel="noopener">DiskGenius</a></h2><p>磁盘操作工具，该有的都有，不该有的也有</p><h2 id="Dism"><a href="#Dism" class="headerlink" title="Dism++"></a><a href="https://www.chuyu.me/zh-Hans/index.html" target="_blank" rel="noopener">Dism++</a></h2><p>原本是一个类似 Dism 前端的工具，现在有了很多其他实用功能</p><h2 id="DXVA-Checker"><a href="#DXVA-Checker" class="headerlink" title="DXVA Checker"></a><a href="https://bluesky23.yukishigure.com/en/DXVAChecker.html" target="_blank" rel="noopener">DXVA Checker</a></h2><p>DXVA 的检测工具</p><h2 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a><a href="https://www.voidtools.com" target="_blank" rel="noopener">Everything</a></h2><p>文件搜索器</p><h2 id="FastCopy"><a href="#FastCopy" class="headerlink" title="FastCopy"></a><a href="https://fastcopy.jp" target="_blank" rel="noopener">FastCopy</a></h2><p>文件拷贝器</p><h2 id="FFmpeg"><a href="#FFmpeg" class="headerlink" title="FFmpeg"></a><a href="https://ffmpeg.org" target="_blank" rel="noopener">FFmpeg</a></h2><h2 id="FLV-Extract"><a href="#FLV-Extract" class="headerlink" title="FLV Extract"></a><a href="https://www.moitah.net/" target="_blank" rel="noopener">FLV Extract</a></h2><p>FLV 文件的分离小工具</p><h2 id="GCFScape"><a href="#GCFScape" class="headerlink" title="GCFScape"></a><a href="http://nemesis.thewavelength.net/?p=26" target="_blank" rel="noopener">GCFScape</a></h2><p>Valve 的各种包格式查看器</p><h2 id="GPU-Z"><a href="#GPU-Z" class="headerlink" title="GPU-Z"></a><a href="https://www.techpowerup.com/gpuz/" target="_blank" rel="noopener">GPU-Z</a></h2><p>老牌 GPU 检测工具</p><h2 id="HD-Tune-Pro"><a href="#HD-Tune-Pro" class="headerlink" title="HD Tune Pro"></a><a href="https://www.hdtune.com/index.html" target="_blank" rel="noopener">HD Tune Pro</a></h2><p>老牌硬盘测试工具</p><h2 id="HWMonitor"><a href="#HWMonitor" class="headerlink" title="HWMonitor"></a><a href="https://www.cpuid.com/softwares/hwmonitor.html" target="_blank" rel="noopener">HWMonitor</a></h2><p>跟 CPU-Z 同门的硬件状态监视工具</p><h2 id="ILSpy"><a href="#ILSpy" class="headerlink" title="ILSpy"></a><a href="https://github.com/icsharpcode/ILSpy" target="_blank" rel="noopener">ILSpy</a></h2><p>.NET 程序集查看和反编译器</p><h2 id="inSSIDer"><a href="#inSSIDer" class="headerlink" title="inSSIDer"></a><a href="https://www.metageek.com/products/inssider/" target="_blank" rel="noopener">inSSIDer</a></h2><p>WiFi 网络环境查看器</p><h2 id="JSON-C-Class-Generator"><a href="#JSON-C-Class-Generator" class="headerlink" title="JSON C# Class Generator"></a><a href="http://www.xamasoft.com/json-class-generator/" target="_blank" rel="noopener">JSON C# Class Generator</a></h2><p>根据 JSON 文本生成 C# 类的小工具</p><h2 id="LAV-Filters"><a href="#LAV-Filters" class="headerlink" title="LAV Filters"></a><a href="https://github.com/Nevcairiel/LAVFilters" target="_blank" rel="noopener">LAV Filters</a></h2><p>一组应该是目前最牛逼的视频分离解码器</p><h2 id="libwebp"><a href="#libwebp" class="headerlink" title="libwebp"></a><a href="https://developers.google.com/speed/webp/download" target="_blank" rel="noopener">libwebp</a></h2><p>WebP 格式工具集</p><h2 id="Locale-Emulator"><a href="#Locale-Emulator" class="headerlink" title="Locale Emulator"></a><a href="https://pooi.moe/Locale-Emulator/" target="_blank" rel="noopener">Locale Emulator</a></h2><p>Locale 模拟器，作者后来写了 <a href="https://pooi.moe/QuickLook/" target="_blank" rel="noopener">QuickLook</a></p><h2 id="MadVR"><a href="#MadVR" class="headerlink" title="MadVR"></a><a href="http://madvr.com/" target="_blank" rel="noopener">MadVR</a></h2><p>目前最牛逼的视频渲染滤镜</p><h2 id="MD5Tool"><a href="#MD5Tool" class="headerlink" title="MD5Tool"></a><a href="https://github.com/XinoAssassin/md5tool" target="_blank" rel="noopener">MD5Tool</a></h2><p>自己写的 MD5 和 SHA-1 查看小工具</p><h2 id="MediaController"><a href="#MediaController" class="headerlink" title="MediaController"></a><a href="https://github.com/XinoAssassin/MediaController" target="_blank" rel="noopener">MediaController</a></h2><p>自己写的远程音乐播放状态控制器</p><h2 id="MediaInfo"><a href="#MediaInfo" class="headerlink" title="MediaInfo"></a><a href="https://mediaarea.net/en/MediaInfo" target="_blank" rel="noopener">MediaInfo</a></h2><p>媒体文件信息查看器</p><h2 id="MeGUI"><a href="#MeGUI" class="headerlink" title="MeGUI"></a><a href="https://sourceforge.net/projects/megui/" target="_blank" rel="noopener">MeGUI</a></h2><p>一套视频媒体编码工具图形前端</p><h2 id="MKVToolNix"><a href="#MKVToolNix" class="headerlink" title="MKVToolNix"></a><a href="https://mkvtoolnix.download/" target="_blank" rel="noopener">MKVToolNix</a></h2><p>MKV 文件处理工具集</p><h2 id="MonaTiny"><a href="#MonaTiny" class="headerlink" title="MonaTiny"></a><a href="https://sourceforge.net/projects/monaserver/files/MonaTiny/" target="_blank" rel="noopener">MonaTiny</a></h2><p>简易的视频流服务器，支持 RTMP、HTTP(S)、WS 等协议</p><h2 id="Mp3tag"><a href="#Mp3tag" class="headerlink" title="Mp3tag"></a><a href="https://www.mp3tag.de/en/" target="_blank" rel="noopener">Mp3tag</a></h2><p>音频文件元数据工具</p><h2 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad++"></a><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">Notepad++</a></h2><h2 id="Ntlea"><a href="#Ntlea" class="headerlink" title="Ntlea"></a><a href="https://archive.codeplex.com/?p=ntlea" target="_blank" rel="noopener">Ntlea</a></h2><p><a href="https://weibo.com/galstars" target="_blank" rel="noopener">辣个男人</a>写的 Locale 模拟器</p><h2 id="NVIDIA-Inspector"><a href="#NVIDIA-Inspector" class="headerlink" title="NVIDIA Inspector"></a><a href="https://www.techpowerup.com/download/nvidia-inspector/" target="_blank" rel="noopener">NVIDIA Inspector</a></h2><p>N 卡驱动配置文件修改器</p><h2 id="PPSSPP"><a href="#PPSSPP" class="headerlink" title="PPSSPP"></a><a href="https://www.ppsspp.org/" target="_blank" rel="noopener">PPSSPP</a></h2><p>PSP 模拟器</p><h2 id="Privoxy"><a href="#Privoxy" class="headerlink" title="Privoxy"></a><a href="https://www.privoxy.org/" target="_blank" rel="noopener">Privoxy</a></h2><p>Web 代理</p><h2 id="Proxifier"><a href="#Proxifier" class="headerlink" title="Proxifier"></a><a href="https://www.proxifier.com/" target="_blank" rel="noopener">Proxifier</a></h2><p>Proxy Everything</p><h2 id="Putty"><a href="#Putty" class="headerlink" title="Putty"></a><a href="https://www.putty.org/" target="_blank" rel="noopener">Putty</a></h2><h2 id="Rufus"><a href="#Rufus" class="headerlink" title="Rufus"></a><a href="https://rufus.ie/" target="_blank" rel="noopener">Rufus</a></h2><p>目前最好用的 USB 启动介质制作器</p><h2 id="SysinternalsSuite"><a href="#SysinternalsSuite" class="headerlink" title="SysinternalsSuite"></a><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite" target="_blank" rel="noopener">SysinternalsSuite</a></h2><p>针对 Windows 系统的工具集</p><h2 id="Universal-Extractor"><a href="#Universal-Extractor" class="headerlink" title="Universal Extractor"></a><a href="https://www.legroom.net/software/uniextract" target="_blank" rel="noopener">Universal Extractor</a></h2><p>从各种压缩包和安装程序中解压提取文件的工具</p><h2 id="UsbEAm-Hosts-Editor"><a href="#UsbEAm-Hosts-Editor" class="headerlink" title="UsbEAm Hosts Editor"></a><a href="https://www.dogfight360.com/blog/475/" target="_blank" rel="noopener">UsbEAm Hosts Editor</a></h2><p>针对各大游戏平台的 Hosts 修改工具</p><h2 id="Valve-Resource-Format"><a href="#Valve-Resource-Format" class="headerlink" title="Valve Resource Format"></a><a href="https://github.com/SteamDatabase/ValveResourceFormat" target="_blank" rel="noopener">Valve Resource Format</a></h2><p>V社各种类型文件的查看、反编译器</p><h2 id="VTFEdit"><a href="#VTFEdit" class="headerlink" title="VTFEdit"></a><a href="http://nemesis.thewavelength.net/index.php?c=238" target="_blank" rel="noopener">VTFEdit</a></h2><p>VTF 文件编辑器</p><h2 id="WinHex"><a href="#WinHex" class="headerlink" title="WinHex"></a><a href="https://www.x-ways.net/winhex/" target="_blank" rel="noopener">WinHex</a></h2><p>居家必备的编辑器</p><h2 id="WinMTR"><a href="#WinMTR" class="headerlink" title="WinMTR"></a><a href="https://sourceforge.net/projects/winmtr/" target="_blank" rel="noopener">WinMTR</a></h2><p>Windows 下的图形化 MTR 工具</p><h2 id="WinSCP"><a href="#WinSCP" class="headerlink" title="WinSCP"></a><a href="https://winscp.net" target="_blank" rel="noopener">WinSCP</a></h2><h2 id="WiX-Toolset"><a href="#WiX-Toolset" class="headerlink" title="WiX Toolset"></a><a href="http://wixtoolset.org/" target="_blank" rel="noopener">WiX Toolset</a></h2><p>针对 Windows 安装包(.msi等格式)的工具集</p><h2 id="WizTree"><a href="#WizTree" class="headerlink" title="WizTree"></a><a href="https://antibody-software.com/web/software/software/wiztree-finds-the-files-and-folders-using-the-most-disk-space-on-your-hard-drive/" target="_blank" rel="noopener">WizTree</a></h2><p>磁盘空间占用可视化查看器</p><h2 id="x264-amp-x265"><a href="#x264-amp-x265" class="headerlink" title="x264 &amp; x265"></a>x264 &amp; x265</h2><p>开源 AVC 和 HEVC 编码器</p><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p>还有一些过于硬核的工具没有列出来，诸如 BIOS 修改之类的工具。</p><p><code>&gt;&gt;endl;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写点白开水文，这次介绍一下我存续最久的工具目录中都有些啥，按字母排序&lt;/p&gt;
&lt;h2 id=&quot;AcDown&quot;&gt;&lt;a href=&quot;#AcDown&quot; class=&quot;headerlink&quot; title=&quot;AcDown&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://archive.c
      
    
    </summary>
    
    
      <category term="杂" scheme="https://blog.xinoassassin.me/tags/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>PC 硬件史话</title>
    <link href="https://blog.xinoassassin.me/2019/03/pc-hardware-history-1/"/>
    <id>https://blog.xinoassassin.me/2019/03/pc-hardware-history-1/</id>
    <published>2019-03-04T05:34:00.000Z</published>
    <updated>2019-03-06T12:10:35.869Z</updated>
    
    <content type="html"><![CDATA[<h2 id="成立之初的-Intel-和-AMD"><a href="#成立之初的-Intel-和-AMD" class="headerlink" title="成立之初的 Intel 和 AMD"></a>成立之初的 Intel 和 AMD</h2><h3 id="Intel-篇"><a href="#Intel-篇" class="headerlink" title="Intel 篇"></a>Intel 篇</h3><p>书接上文，NM Electronics，在创立的头个月底改名成 Intel。据称，Intel 这个名字是启发自 <em>int</em>egrated 和 <em>el</em>ectronics 的整合。</p><p><img src="/images/Intel_old_logo.png" width="30%"></p><p>Intel 成立初期的主要业务并不是微处理器的开发与制造，而是瞄准半导体存储器市场，公司的首款产品便是 SRAM（静态随机存取存储器，现多见于 CPU 内部）—— Intel 3101。</p><p><img src="/images/Intel-3101.jpg" width="40%"></p><p>3101 推出于 1969 年，比当时市场上的同类产品快了接近一倍。同年，Intel 还推出了 1101 和 3301 两款产品，前者是创新性地将 MOSFET 工艺运用于存储器制造的产物，后者则是一款只读存储器（<strong>R</strong>ead-<strong>O</strong>nly <strong>M</strong>emory）。虽然 3101 和 1101 这两款产品都颇具创新意义，但是影响并不大。真正使 Intel 开始出名的，是 1970 年发售的 1103——世界上第一款商用的 DRAM（动态随机存取存储器，也就是今天最常见的内存类型）。1103 在 1972 年成为了最为畅销的半导体存储芯片，并成功地在许多应用场合完成了 Intel 原本的设想——取代当时最流行的磁芯存储器（Magnetic-core memory）。</p><h3 id="AMD-篇"><a href="#AMD-篇" class="headerlink" title="AMD 篇"></a>AMD 篇</h3><p>与 Intel 不同的是，AMD 在成立之初原本是仙童半导体和国家半导体（National Semiconductor）第二供货商，专注于制造芯片，并引入了美国军方标准作为质量管理标准。要知道，在早期的计算机工业里，微芯片不可靠的质量是各大客户都极力想避免的问题，所以 AMD 靠这个赢得了一些优势。</p><p>在 1969 年 11 月，AMD 推出了它自己的首款产品：Am9300，一款移位寄存器。之后陆续推出了一系列畅销的元器件。</p><p>在 1971 年，AMD 进入了内存芯片市场，同年公司的销售额就已经达到了四百六十万美元。</p><p>到 1975 年，AMD 一共生产着 212 种产品，其中 49 种是自主研发的。</p><h2 id="4004-与-8008"><a href="#4004-与-8008" class="headerlink" title="4004 与 8008"></a>4004 与 8008</h2><h3 id="Intel-4004"><a href="#Intel-4004" class="headerlink" title="Intel 4004"></a>Intel 4004</h3><p>终于讲到 Intel 的第一颗微处理器（Microprocessor），4004 的故事了。</p><p>1969 年，Busicom，一家日本的计算器公司拿着自己设计的一套由 12 枚 IC 组成的计算器引擎方案找到了刚成立不久的 Intel（其实是 Intel 主动去接触的），想让他们完善并生产这套引擎。然而 Intel 方面给出了一套更加优雅的方案，1971 年初，由 Federico Faggin 领导的开发团队设计出了一套只需要 4 枚芯片就可以取代原来的 12 枚芯片的芯片组，也就是后来的 MCS-4 芯片组，其中的核心便是大名鼎鼎的 4004。</p><p><img src="/images/intel-4004.jpg" width="40%"></p><p>4004 使用了 10 微米的制程，一共集成了约 2300 个晶体管，最高主频为 740 kHz，数据位宽为 4 bit，每秒最多能执行约 92000 条指令。这些参数在当时虽然并不是最强的，但因为它是市场上首款通用可编程处理器，又是全球首款商用单片微处理器，所以就像 1971 年 11 月 15 日 Intel 在 Electronic News 上刊登的广告语说的那样，它在集成电子领域开创了一个新的纪元。</p><p><img src="/images/intel-4004-ad.jpg" width="40%"></p><p>4004 直到 1981 年才停产，期间推出了 4040 作为它的加强版。这里有一段 4004 发布三十五周年纪念会的录像，其中有两位设计师的演讲，感兴趣的朋友可以去看看：<a href="https://www.youtube.com/watch?v=j00AULJLCNo" target="_blank" rel="noopener">Intel 4004 Microprocessor 35th Anniversary</a></p><h3 id="Intel-8008"><a href="#Intel-8008" class="headerlink" title="Intel 8008"></a>Intel 8008</h3><p>8008 与 4004 实际上是两个独立进行的项目，8008 项目开始的时间甚至可能早于 4004。而 8008 背后的故事，则是非常有趣：</p><p>Computer Terminal Corporation (CTC) 是当时刚成立不久的一家设计制造小型桌面终端的公司，1967 年他们推出了一款非常受欢迎的机型：Datapoint 3300。</p><p><img src="/images/DataPoint_3300.jpg" width="40%"></p><p>这款机型虽然卖的不错，然而它的小毛病可是不少，比如发热问题就是其一。为了解决这台机型上存在的问题，CTC 开始考虑采用单片 CPU 的设计来改进内部电路，于是公司掌门人之一的 Roche 找到了罗伯特·诺伊斯，交流了这个想法。诺伊斯觉得这是个绝妙的点子，而且 Intel 有能力做，但是这样子干很蠢：“一台计算机只能卖一块主处理芯片，但是可以卖数百颗存储芯片”。另一个考量则是当时 Intel 的存量客户几乎都是买他们的存储芯片搭配自己研发的处理器，而一旦 Intel 开始卖自家的处理器了，那么它和客户间就可能会形成竞争关系，原本的客户可能会另寻供应商。</p><p>但最终诺伊斯还是在 1970 年初和 CTC 签下了价值 50000 美元的开发合同，不过呢，CTC 同时还找了德州仪器作为它们的备胎。</p><p>接下来的故事就众说纷纭了，英文维基上给出的这个缺少来源的说法是 TI（德州仪器）拿到了 Intel 的早期设计，并做出了样片，但是有许多 bug，被 CTC 给否了。Intel 自己的进度也不顺利，推迟了。结果呢，CTC 那边等不及了，还是用了老而成熟的方案在 1970 年 3 月末推出了改进型新品：Datapoint 2200。这新品都出了，那么自然也就不需要原来计划的配套处理器了，所以 CTC 叫停了代号为 1201 的芯片的研发。</p><p>半年过去了，似乎是注意到了 4004 的成功，有家计算器生产商向 Intel 表达了想把 1201 芯片用在他们家的科学计算器上的想法。正巧隔壁 4004 项目已经完成了，我们的老熟人 Federico Faggin 过来接手了 1201 项目，他们对原来的设计进行了一些小调整。最终在 1971 年的晚些时候，Intel 把完成版的 1201 送到了 CTC 手上。</p><p>结果 CTC 为了推出新的产品，已经不满足于 1201 所提供的性能，于是他们砍掉了这个项目，用 1201 身上的所有知识产权代替五万美金向 Intel 支付了费用。随后 Intel 将这款产品更名为 8008，并在 1972 年 4 月份将它以 $120 的价格放进了自家的产品目录里，他们原本担心的老客户流失问题也没有发生，反而延续了 4004 在商业上的成功。</p><p><img src="/images/Intel_8008.jpg" width="40%"></p><p>与 4004 一样，8008 也是采用的 10 微米制程，集成了约 3500 个晶体管，早期版本主频为 500 kHz，后来升高至 800 kHz。但因为数据位宽为 8 bit，所以实际性能比 4004 还是要高不少。</p><p>8008 最大的意义还是在它的设计上，后来 1974 年 4 月份发布的 8080 延续了它的设计，而 x86 的开创者 8086 则是继承了 8080 的指令集，所以说 8008 是现在所有 x86 CPU 的老祖宗也不为过。</p><h2 id="AMD-的逆向工程"><a href="#AMD-的逆向工程" class="headerlink" title="AMD 的逆向工程"></a>AMD 的逆向工程</h2><p>1974 年，Intel 推出了 8080 微处理器。AMD 此时想进入微处理器的市场，于是他们搞到一块早期的 8080 芯片，对其展开了逆向工程：显微拍照，用照片捣鼓出了原理图和逻辑图，然后研发出了自己的第一款微处理器：Am9080。</p><p><img src="/images/AMD_Am9080.jpg" width="40%"></p><p>Am9080 的制造成本只需要 50 美分，但却以 700 美元一片的价格卖给军用市场。结果不久之后 Intel 就与 AMD 签署了一份协议，AMD 成为了 8080 的授权第二供应商，这使得两家可以联合打入那些不接受单一供货源的市场，这份协议也给后来的故事埋下了伏笔。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>虽然 Intel 研发出的这两款单片型处理器的性能都挺一般的，但还是有不少业界人士和爱好者注意到了这种类型的处理器的远大前景——可以加速计算机的小型化，而事实上，在七十年代中期，已经有几家公司开始尝试用 Intel 的芯片设计制造小型的计算机了。</p><p>下一章，笔者将会把主视角从 CPU 转开，尝试讲述一下 IBM PC 兼容标准诞生的故事。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://newsroom.intel.com/news/intel-at-50-intels-first-product-3101/" target="_blank" rel="noopener">Intel at 50: Intel’s First Product – the 3101</a></li><li><a href="https://newsroom.intel.com/news/intel-50-intels-1101/" target="_blank" rel="noopener">Intel at 50: Intel’s 1101</a></li><li><a href="http://www.mynikko.com/CPU/3101.html" target="_blank" rel="noopener">MyNikko.com 微處理器博物館 - Intel 3101</a></li><li><a href="https://zhuanlan.zhihu.com/p/39804154" target="_blank" rel="noopener">纪念英特尔成立五十周年 篇一 阴差阳错</a></li><li><a href="https://www.intel.com/content/www/us/en/history/museum-story-of-intel-4004.html" target="_blank" rel="noopener">The Story of the Intel® 4004</a></li><li><a href="https://en.wikichip.org/wiki/intel/mcs-8#History" target="_blank" rel="noopener">MCS-8  - Intel - WikiChip</a></li></ol><p>英文维基不作为参考资料列出。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;成立之初的-Intel-和-AMD&quot;&gt;&lt;a href=&quot;#成立之初的-Intel-和-AMD&quot; class=&quot;headerlink&quot; title=&quot;成立之初的 Intel 和 AMD&quot;&gt;&lt;/a&gt;成立之初的 Intel 和 AMD&lt;/h2&gt;&lt;h3 id=&quot;Intel
      
    
    </summary>
    
    
      <category term="Hardware History" scheme="https://blog.xinoassassin.me/tags/Hardware-History/"/>
    
  </entry>
  
  <entry>
    <title>PC 硬件史话——序章</title>
    <link href="https://blog.xinoassassin.me/2019/02/pc-hardware-history-0/"/>
    <id>https://blog.xinoassassin.me/2019/02/pc-hardware-history-0/</id>
    <published>2019-02-26T04:40:00.000Z</published>
    <updated>2019-03-04T14:13:38.173Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>笔者因为从小被父亲的爱好所影响，所以自然而然地喜欢上了 PC 硬件方面的东西。好多年前《微型计算机》杂志上不断有各种 PC 的元件发展史的文章，当时非常爱读这类历史传奇一般的说明文，现在有能力去直接读英文资料了，也就产生了自己写的念头。</p><p>思前想后几个月，我决定还是以比较方便我自己阅读的资料为主，尽量客观的以时间轴的方式来书写这段跨度长达近乎六十年的传奇历史。</p><p>参考的资料主要是以英文维基为主，并辅以各种其他资料来保证准确性和真实性。</p><p>序章里面还要讲讲这一整段传奇故事的大背景。</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h3 id="半导体器件的发展"><a href="#半导体器件的发展" class="headerlink" title="半导体器件的发展"></a>半导体器件的发展</h3><p>十九世纪的电学研究开启了第二次工业革命，把人类带入了电气时代。随着材料科技的迅猛进步，半导体的性质逐渐被人们所掌握，这直接导致了在二十世纪初，各种新型电子元件被发明，比如现在大家非常熟悉的二极管、电子管等等。在早期，这些半导体元件的个头都比较大，而随后出现的晶体管，则开启了一场真正意义上的革命。</p><p>晶体管分为两种类型，一种是场效应管（Field-effect Transistor, FET），其概念由 J. E. Lilienfeld 于 1926 年提出，但限于当时的条件，没有能够生产出实际能够工作的器件。而现在普遍认为的第一支晶体管是由贝尔实验室在 1947 年发明的，参与研发的人员有 John Bardeen, Walter Brattain 和 William Shockley。 他们发明的晶体管是与 J. E. Lilienfeld 提出的场效应管不同的双极性结型晶体管（Bipolar Junction Transistor, BJT），也就是我们现在俗称的三极管。</p><p><img src="/images/PNP.png">  <img src="/images/NPN.png"></p><p>由于种种原因，在发明了晶体管之后，Shockley（后文译作肖克利）离开了贝尔实验室。1956 年，他在山景城创办了以他自己名字命名的肖克利半导体实验室（Shockley Semiconductor Laboratory），实验室所在的那片地区后来发展演变成为了举世闻名的硅谷（Silicon Valley）。肖克利实验室招揽了许多有志向研究半导体的年轻科学家与工程师，其中最为著名的便是日后的「八叛逆」: 罗伯特·诺伊斯（Robert Noyce）、高登·摩尔（Gordon Moore）、朱利亚斯·布兰克（Julius Blank）、尤金·克莱尔（Eugene Kleiner）、金·赫尔尼（Jean Hoerni）、杰·拉斯特（Jay Last）、谢尔顿·罗伯茨（Sheldon Roberts）和维克多·格里尼克（Victor Grinich）。</p><p><img src="/images/The_Traitorous_Eight.jpg"></p><h4 id="八叛逆与仙童半导体"><a href="#八叛逆与仙童半导体" class="headerlink" title="八叛逆与仙童半导体"></a>八叛逆与仙童半导体</h4><p>可能是因为肖克利在实验室管理以及个人性格上存在的一些缺陷，八叛逆向肖克利的上级 Arnold Beckman 要求替换掉他在实验室的位置，然而 Arnold Beckman 最终做出的一系列支持肖克利的决定使得八叛逆不得不考虑离开肖克利实验室另寻出路。</p><p>当时半导体器件的主要基底材料是锗，而八叛逆认为硅比锗拥有更好的商业前景，因为相对于储量不高、提炼繁杂的锗，硅可以从沙子中提炼出来，可以有效降低原料成本和生产时间。罗伯特·诺伊斯用慷慨激昂的演讲向仙童摄影器材公司的老板 Sherman Fairchild 展示了他们的愿景，并成功说服了他。随后在 1957 年，他们获得了仙童摄影器材公司的资助，创办了仙童半导体（Fairchild Semiconductor）。仙童半导体在 1958 年成功的以硅为基底开发出了一款在商业上非常成功的晶体管——2N697。随后在 1959 年，八叛逆之一的金·赫尔尼又研发出了新的平面工艺，相对于传统的台面工艺，新的平面工艺无论是在成本还是产品的稳定性上，都有着巨大的进步，这项技术至今仍在半导体制造中扮演着极其重要的角色。</p><p><img src="/images/Fairchild_ad_Electronics-1958-08-15.jpg" width="50%"></p><p>继承了前人的理念之后，在 1958 年 9 月 12 日，德州仪器（Texas Instruments）的 Jack Kilby 成功的研发出了第一块能够工作的集成电路，随后他在 1959 年 2 月 6 日为这项发明申请了专利。半年之后，八叛逆之一的罗伯特·诺伊斯成功独立研发出了另一种不同的集成电路，与 Jack Kilby 不同的是，罗伯特·诺伊斯的集成电路是以硅为基底，并且更加实用。一年之后，诺伊斯又将平面工艺运用到集成电路的制造流程上，这也使得业界更为认可仙童半导体出产的集成电路。仙童半导体在创造了一系列对后世影响深远的研究发明之后俨然已经成为了整个半导体行业的领军者。</p><h3 id="摩尔定律"><a href="#摩尔定律" class="headerlink" title="摩尔定律"></a>摩尔定律</h3><p>1965 年 4 月 8 日，八叛逆之一的高登·摩尔在 Electronics 杂志上发表了名为 <a href="http://hasler.ece.gatech.edu/Published_papers/Technology_overview/gordon_moore_1965_article.pdf" target="_blank" rel="noopener"><em>Cramming more components onto integrated circuits</em></a> 的文章，文中，他基于对行业发展的长久观察和思考后做出了一项具有历史意义的预测：</p><blockquote><p>The complexity for minimum component costs has increased at a rate of roughly a factor of two per year. Certainly over the short term this rate can be expected to continue, if not to increase. Over the longer term, the rate of increase is a bit more uncertain, although there is no reason to believe it will not remain nearly constant for at least 10 years. </p></blockquote><p>这就是半导体行业中著名的”Moore’s Law”的前身，在 1975 年 IEEE（电气电子工程师学会）的一次会议上，摩尔修订了预测的增长率，原本两倍的增长率将在 1980 年之后减半。年内稍晚时候，加州理工学院的 Carver Mead 教授将摩尔的预测总结为”Moore’s Law”。</p><p><img src="/images/transistors-per-microprocessor.png" width="50%"></p><p>摩尔定律事实上只是一条经验定律，但是却延续至今仍旧没有失效，甚至一定程度上在很长一段时间内指引了半导体业界的发展。</p><h3 id="分崩离析与传奇的开始"><a href="#分崩离析与传奇的开始" class="headerlink" title="分崩离析与传奇的开始"></a>分崩离析与传奇的开始</h3><p>让我们把目光重新对准仙童半导体。在六十年代的前五年，仙童半导体的风光一时无两，员工数量从最早的12人发展到了12000人。然而王权没有永恒，这家公司并不会这么一帆风顺下去。1965 年开始，仙童半导体在公司内部管理上开始出现了一些问题，到了 1967 年 7 月，公司已经开始亏损并且领头羊的位置被德州仪器所夺取。1968 年 8 月，罗伯特·诺伊斯、高登·摩尔和 Andrew Grove 一起从仙童半导体离职，创办了 NM Electronics，一年之后，公司更名为 Intel。1969 年，仙童半导体的一群工程师决定离开公司创业，他们找到了 Jerry Sanders 一起合伙，5 月 1 日，Advanced Micro Devices 公司成立。</p><p><img src="/images/The-Roots-of-Silicon-Valley.jpg" width="50%"></p><p>好了，演员已经全数登场，传奇即将上演。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;笔者因为从小被父亲的爱好所影响，所以自然而然地喜欢上了 PC 硬件方面的东西。好多年前《微型计算机》杂志上不断有各种 PC 的元件发展史的文
      
    
    </summary>
    
    
      <category term="Hardware" scheme="https://blog.xinoassassin.me/tags/Hardware/"/>
    
      <category term="Hardware History" scheme="https://blog.xinoassassin.me/tags/Hardware-History/"/>
    
  </entry>
  
  <entry>
    <title>重生娱乐的大逃杀教学</title>
    <link href="https://blog.xinoassassin.me/2019/02/apex-legends/"/>
    <id>https://blog.xinoassassin.me/2019/02/apex-legends/</id>
    <published>2019-02-09T07:23:56.000Z</published>
    <updated>2019-02-09T10:21:54.675Z</updated>
    
    <content type="html"><![CDATA[<p>出乎所有人意料的，在去年 E3 上只露了个脸的 Respawn Entertainment 不声不响地在大年夜公开了以 Titanfall 为背景的大逃杀游戏——Apex Legends，然而并没有 Titanfall 系列中的 Titan 元素，只剩 60 个铁驭在地图上打架，本想着没 Titan 就失去了系列的灵魂，但是在看了某油管人（彩虹社 Gamers 的かなえ了解一下）直播之后马上就去下载了这款游戏，体验之后感觉就是比想象中的好不少，到现在已经打了有十多小时，想写一点简单的感想。</p><h2 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h2><p>目前 APEX Legends 仅有一张地图，名叫 King’s Canyon，简中译为诸王峡谷。不过规模并不大，游戏人数上限只有 60 人，这倒是刚刚好。<br><img src="/images/apex-map.jpg" width="60%"></p><p>地图虽然不大，但是地块类型却不少，沙漠、山谷、平原、湿地、沼泽、高山、峡谷。几个地点的设计也非常的有意思，骷髅镇有一种贫民窟的感觉，而几个军事基地则是很符合背景设定的气质，甚至在游戏开始跳伞时你还可以看到地图外那两只巨大的动物。这是一张非常有 Titanfall 味道的地图，所以也难怪会有人说这是拿了以前的废案做出来的。</p><p><img src="/images/apex-legends-big-animals.jpg" width="60%"></p><p>虽然游戏没有载具系统，但是地图上提供了不少可以快速移动的绳索，还有个传奇的大招就是架设一条所有人都可用的绳索。这里就要夸一下地图的立体设计非常好，有很强的层次感，比如在桥梁河心瀑布一带，因为有着巨大的落差就非常容易出现多队立体交火的情况。</p><h2 id="玩法与手感"><a href="#玩法与手感" class="headerlink" title="玩法与手感"></a>玩法与手感</h2><p>在玩法上重生比 T 组更进一步，在大逃杀游戏中做了八个有不同技能的角色，称为「传奇」，每个传奇有一个被动，一个短 CD 的主动技能和一个充能大招。传奇按照技能特性分为四类，分别是攻击、防御、侦察和支援型。每个小队由三名传奇组成，选人不可重复。</p><p><img src="/images/apex-legends-list.png" width="60%"></p><p>就拿笔者爱用的 Bloodhound 寻血猎犬来说，作为目前唯一的侦察型传奇，他的技能作用就是提供信息，被动就是可以看到视野中地方留下的痕迹，比如这扇门在多少秒前被打开，地上的血迹、残留的空弹壳等等都会显示出来。主动技能是扫描附近有没有敌人，如果有就会高亮透视标出扫描时所在的位置。而大招则是<del>打鸡血</del>视野变灰，而视野内的敌人则会被高亮标黄，同时自己的移动速度变快，地上的血迹将会形成连续的一片供追踪用。</p><p>而其他传奇的技能也非常有特色，比如直布罗陀身为一个防御型传奇，大招却是呼叫轰炸；而全游戏没有提供的烟雾弹则是变成了一个小技能给了班加罗尔；恶灵可以创建远距离传送门；很萌的探路者机器人有着高机动性的勾爪。可能你会觉得这些技能在别的游戏中都已经见过了，但是当这么多的技能进入到一个 60 人的大型战场后，一切又变得不一样了。两队中近距离交战的时候就如同在一个快节奏的 FPS 中，瞬间技能全开各显神通，甚至枪声会吸引更多的队伍来参战，笔者觉得可以用「大了看是个大逃杀游戏，小了看是个 3V3V3… 的 COD 或者 OW」来描述本作的特点。</p><p>重生娱乐不愧是继承了 IW 之魂的工作室，本作的射击手感趋近于 COD 系列，枪械除了某两把连发枪之外别的基本没有后座力，子弹下坠也非常小，还带有击中反馈和伤害数字显示，护盾碎裂也有相应的提示声。但是目前霰弹枪的强度实在是太高了，反而在别的大逃杀中很吃香的 AR，SR 都不怎么受人喜欢，可能也是跟目前绝大多数战斗发生在中近距离有关。</p><h2 id="交流"><a href="#交流" class="headerlink" title="交流"></a>交流</h2><p>就笔者迄今为止玩的比较多的两个大逃杀游戏——PUBG 和 BO4 的 Blackout 模式来说，APEX Legends 在团队交流上的改进是非常明显的——鼠标中键的转轮标记系统。这可能是笔者用过的最方便的交流系统，甚至可以说解决了一大痛点。你能通过鼠标做到包括但不限于如下的功能：</p><ul><li>单击中键标记点</li><li>双击告诉队友标记点有敌人</li><li>长按能打开一个神似 Dota 2 的聊天轮盘系统，里面有：去那里、这里有人来过等等快捷标记</li><li>点击地上的物品告诉队友这里有啥</li><li>在自己空的枪械配件上按中键就可以告诉队友自己缺啥</li></ul><p><img src="/images/apex-ping-system.jpg" width="60%"></p><p>而且每次标记都会顺带一句人物语音，甚至整盘游戏下来都用不上游戏内置的队伍语音。在单排散人的时候这个功能非常实用，尤其是在遇到了有一定沟通障碍的老外的时候。现在不少国外游戏媒体和 Reddit 社区对这个标记系统也是赞不绝口。</p><h2 id="Free-to-Play-以及内购"><a href="#Free-to-Play-以及内购" class="headerlink" title="Free to Play 以及内购"></a>Free to Play 以及内购</h2><p>免费真的是迅速提升游戏玩家数量的一道杀手锏，配合上不错的游戏品质，三天内本作的在线人数已经突破百万了，在 Twitch 上的观众也一直在第一位，实为 2019 开年第一爆款游戏。</p><p>而作为一款 EA 出品的 F2P 游戏，内购肯定是存在的，不知道是跟暴雪学了一手还是怎么的，内购的项目跟 Overwatch 都十分相似，有传奇的皮肤、姿势、语音，还有枪械的皮肤，甚至品级都分的一样，白蓝紫橙。不过除了跟 OW 比较相似的项目之外，在传奇的内购项目中还是有不少特色的东西的，比如名目繁多的计数器，你的 ID 卡边框以及在 ID 卡中的姿势都是可以购买的项目。</p><p><img src="/images/apex-legends-skin.jpg" width="60%"></p><p style="text-align: center;">眼熟吗？</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>总的来说，APEX Legends 不像是一个匆匆忙忙赶制出来的游戏，而相反，它的完成度很高，质量还不错。虽然缺少了 Titan 的元素，但是带着技能的大逃杀带来的新玩法确实瞄准了一个市场空缺。</p><p>值得一提的是本作的音乐仍然由 Titanfall 系列的作曲家 Stephen Barton 负责。</p><p>虽然游戏整体的完成度很高，但是随着玩家的涌入，相信很快就会有问题暴露出来，现在摆在眼前的已经有反作弊和服务器稳定性的问题了。</p><p>如果你喜欢 COD 或者是 Titanfall；是 Infinity Ward 或者 Respawn Entertainment 的拥趸；又或者是别的大逃杀游戏的玩家想体验一下新鲜感，都可以下载。免费游戏，玩玩嘛，又不花钱。</p><p><del>但愿马上就要出的 BFⅤ 的大逃杀模式不要比这个弟弟</del></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;出乎所有人意料的，在去年 E3 上只露了个脸的 Respawn Entertainment 不声不响地在大年夜公开了以 Titanfall 为背景的大逃杀游戏——Apex Legends，然而并没有 Titanfall 系列中的 Titan 元素，只剩 60 个铁驭在地图上
      
    
    </summary>
    
    
      <category term="Game" scheme="https://blog.xinoassassin.me/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>一部拍给青年人看的教育片</title>
    <link href="https://blog.xinoassassin.me/2019/01/sex-education/"/>
    <id>https://blog.xinoassassin.me/2019/01/sex-education/</id>
    <published>2019-01-30T19:44:56.000Z</published>
    <updated>2019-02-07T13:35:26.540Z</updated>
    
    <content type="html"><![CDATA[<p>前些日子在不知道哪里听说了有这么一部新上的剧集，好像还不错的样子。这几天趁着自己有点闲情逸致赶紧去看了，发现真的不错，遂码一点字谈谈自己的一点点感受。</p><p><img src="/images/sex-education-cover.jpg" width="50%"></p><h2 id="青春剧"><a href="#青春剧" class="headerlink" title="青春剧"></a>青春剧</h2><p>剧名直译过来就是性教育，乍一听为是什么严肃向教育剧，其实不然，这是一部披着严肃名字皮的青春剧（请原谅我用这个被玩烂的类别）。</p><p>为什么我要用青春剧来归类呢？挺简单的，剧中故事主要发生地是英国乡间的一所高中，主角都是高中生。而剧集中发生的许多事情也确实是青春期年轻人会干的——抽烟还有那啥、滥交和校园欺凌等等等等。虽然有不少夸张的成分在，但是如果没有了夸张的描写，在许多地方也就体会不到青春期特有的那种骚动了。</p><p>而在看似是教育剧的外表之下藏着的是有着丰富情感线的剧情，但是人物之间的关系并不像某些青春校园动画作品中那样「贵圈真乱」，而是非常的清晰自然，当然还是存在着三角关系。另外也不存在什么编剧强行安排角色感情的事情，几乎所有迸出火花的关系都是经过了完备的铺垫的。一口气将一整季看下来，可谓是非常爽快的体验，不过最后还是留了不小的尾巴给第二季延续。</p><h2 id="性"><a href="#性" class="headerlink" title="性"></a>性</h2><p>本剧在网飞上的分级是 16+，确实是一个很合理的分级。</p><p>第一集开头第三十秒开始就直接给你奉上了活春宫，然后就是无处不在的性明示与暗示、无处不在的与性相关的台词以及粗鄙的手势。</p><p>车上、学校各种空教室、家里，几乎都有性爱场景；还有各种体位和同性恋性行为描写，绝对能够满足你的好奇心。</p><h2 id="教育"><a href="#教育" class="headerlink" title="教育"></a>教育</h2><p>既然名字里带有 Education 这个单词，那么教育的成分自然少不了。避孕，性器官知识到堕胎流产这些性方面的教育几乎没有缺席的，但是更为主要的便是在情感上的教育。</p><p>剧中的情感教育涵盖面非常广，举几个例子：</p><ul><li>如何与自己的单身母亲相处（她还是一个性治疗师有N多性伴侣）</li><li>如何与自己十多年的好基友相处（真的是基佬）</li><li>如何与自己喜欢的人做「同事」</li><li>如何在自己的好基友与喜欢的人之间平衡好关系</li><li>到底应不应该帮别人去追自己喜欢的人</li><li>论情侣间交流与坦诚的重要性</li><li>单相思怎么办</li></ul><p>最后一个例子我直接截了一段视频出来：</p><p><video controls src="/images/sex-education-clip.mp4" width="800" height="480"><br></video><br>片中几个震撼场景，给我印象最深的就是第五集末尾的集体对校园欺凌行为说不。在大会上向全年级宣告「It’s my vagina」实在是需要非常大的勇气，但是发展到一个个站起来复读出这句话时就形成了一种非常震撼的场面，这里因为涉及到剧透没办法好好讲，所以还是请有兴趣的朋友们自己去看吧。</p><p>但其实贯穿整个剧集的最重要主线之一是男主突破自己心理障碍的过程，整个过程巧妙地穿插在整部剧集中，到整部剧结尾处甚至还留了一个首位呼应。但细讲会涉及到太多剧透，所以还是请有兴趣的朋友们自己去看吧（复读）。</p><h2 id="末了"><a href="#末了" class="headerlink" title="末了"></a>末了</h2><p>当然作为一部这个时代的青春剧，又是网飞出品，那肯定少不了政治正确的东西。女权主义、LGBT 平权以及肤色问题在剧中均有展现，但这些不管你当成加分项还是减分项的题外话都阻止不了这部剧在 IMDB 上砍下 8.5 分，在豆瓣上甚至从 8.8 分涨到了 9.2 分。评分虽然不能说明一切，但一个有足够数量支撑的高分可能已经比这上面的千把来字更有说服力了。</p><p>最后希望大家都能去看，你或多或少总归会在里面找到共鸣点的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前些日子在不知道哪里听说了有这么一部新上的剧集，好像还不错的样子。这几天趁着自己有点闲情逸致赶紧去看了，发现真的不错，遂码一点字谈谈自己的一点点感受。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/sex-education-cover.jpg&quot; width=&quot;50%&quot;
      
    
    </summary>
    
    
      <category term="杂" scheme="https://blog.xinoassassin.me/tags/%E6%9D%82/"/>
    
      <category term="Entertainment" scheme="https://blog.xinoassassin.me/tags/Entertainment/"/>
    
  </entry>
  
  <entry>
    <title>回忆录</title>
    <link href="https://blog.xinoassassin.me/2019/01/some-memories/"/>
    <id>https://blog.xinoassassin.me/2019/01/some-memories/</id>
    <published>2019-01-29T05:36:12.000Z</published>
    <updated>2019-02-03T06:24:46.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>本故事纯属虚构，如有雷同，那肯定是真的。</p><h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>关于我自己的心理创伤这个问题，我考虑了非常之久。不明不白地，读完四年大学之后，我又多了不少心理创伤。但相对的，我的心理承受能力也确确实实的提高了。我仔细的去回想，发现有那么几段记忆，我始终不愿意去回想，但它就是会时不时的跳出来让我难受。现在，我尝试着写出来，如果各位读者有什么评判，不妨用 SNS 的方式来告诉我。</p><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>D是我刚进大学时候比较喜欢的女生，她有一个室友L，是个北方女孩。</p><p>刚上大学的时候，我还是对班上事情蛮热心的，帮我们班长很多忙。有天班上评贫困等级的时候，L被班长找了个理由留了下来，我头一回知道她的名字，然后要到了联系方式，逐渐熟络起来。</p><p>L是跟我一样的夜猫子，熬夜熬得比我还晚的那种，半夜在那打101，白天的课基本全翘干净了，托她的福，我知道了不少D的事情。当时跟D有一搭没一搭的聊着，D跟我安利了不少唱见。</p><p>就这样过了大概一个半月，12月初的时候，L突然说电脑坏了，我自然而然的当起修理工。然后又过了几天，一天晚上八点，我刷空间的时候突然看到她发了条定位，在机场。</p><p>我很好奇，她怎么会这个时候在机场，发了个消息问她，她回我说，见网友。</p><p>当时我没在意，因为我见网友都是已经有比较长时间的交流之后有机会才会约见面，当然一个宅男约的人基本也都是宅男，出事的机率不大。</p><p>又过了两天，正巧要开年级大会颁个奖，而L参加了礼仪队，不得不赶回来，她让我买了点吃的送过去，我照办了。</p><p>那周周四，突然她就联系我说要不要一起去城里逛逛，她请客，我没明白为啥，稀里糊涂就跟着走了。那天把C城中心的几个景点给逛了，回学校的时候已经八点多了。那天我还知道了她有个同卵妹妹，什么都比她强。</p><p>然后这段故事第一次重点来了。</p><p>那周周末，D联系我说L在疯狂喝酒，很不对头，让我问问情况。我发消息过去，回过来的感觉就是她整个人都疯疯癫癫的，然后她开始跟我倾诉。意外就是这么发生的，我给D回报情况的时候直接是截图的，正巧她把关键的一句话发过来的时候我截到了，然后在我自己都没看到这句话的情况下，D先看到了，然后回了我个“卧槽”，我回头一看，“我操”。</p><p>那句话原文我已经不记得了，但是上下文联系起来的意思就是：我见网友被强奸了。</p><p>当时我就感觉一股热血冲上头顶，马上叫她下楼当面聊。</p><p>聊了些啥我已经不记得了，只记得我听到了更可怕的事实，她的裸照被挂在网上。</p><p>我被她遭遇的惨祸震惊了，原本以为这种只可能是文艺作品中的故事竟然发生在自己认识的人身上。我感觉我承受了巨大的压力，只好抱着她的头，跟她一起哭，最后对着空无一人的操场怒吼“去你妈的老天爷”。</p><p>那天晚上，酒量不行的我，把自己灌睡过去。</p><p>第二天她的精神情况似乎好了点。</p><p>但是，第三天，周一，我上着课没见着她人，不放心在翻她的空间。结果看到了类似于告别世间的一些话。我急了，直接跟D要来了她们的寝室钥匙，冲了一公里路，直接冲进她们那栋公寓楼进了她们寝室。她室友收到消息也跟在我后面回来了。</p><p>我爬上她的床去看她的情况。她最终还是没舍得去死，左手手腕上好多条浅浅的割痕，没割破主血管。我松了一口气，跟她说，你太傻了啊。</p><p>原本我以为她会就此罢手，回到原本的生活轨迹上，我没想到的是，她原本的生活轨迹就是错综复杂的。</p><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>在L出事之后，正巧<em>Sherlock</em>的电影版要在国内上映了，我寻思着去看首映场，然后想了想去问L一起不，她倒是答应的挺爽快的。然后我就买了两张票，市中心最贵的电影院。</p><p>然后就到了放假，因为圣诞节参加了个志愿者活动，假期前晚我就进城去参加聚餐了。聚餐结束准备去地铁站往学校赶的时候，我被D告知，L又去机场了。</p><p>一瞬间我进入了慌乱之中，我真的不愿意再看到之前的事情重演了，于是马上联系L。</p><p>「你又去接人了？」「是啊」「……」「你怎么知道的？」「这你就别管了，自己注意安全」</p><p>说实话，当时我已经产生了一种不想再管她了的情绪，但还是放心不下，就放弃了回学校的打算，找了家咖啡店坐下充电。</p><p>接下去的几个小时，穿插了另外一段小故事，大致就是被陌生年轻女性搭讪聊天听她抱怨男朋友地渣男事迹然后一起吃了点东西然后把她送回她男朋友家楼下。</p><p>折腾完，已经是凌晨两点左右了，我慢悠悠地逛到之前选定在看完电影之后去的通宵书店，进门坐下休息。</p><p>突然L发了条短信过来，「你饿吗，要不要过来一起吃个饭？」</p><p>我心想也就不打扰你们两个了，再说我走了一天了根本走不动了，就婉拒了。昏昏沉沉睡了没多久，天还没亮之前我又背着包四处乱逛了。</p><p>那天下午，我收到D的消息，她们寝室丢钱了，她们怀疑是L干的，然后开始跟我吐诉关于L的问题，包括但不限于晚上打游戏说话很吵，随便乱拿别人的东西比如各种化妆品，甚至衣服都是穿她的很久没还，还有各种卫生问题。我觉得L再坏也干不出来偷钱这档子事情的，让她们去阿姨那边看监控。</p><p>我心里乱的一塌糊涂，在到底该相信谁之间摇摆。最后我决定，不再管L这档子破事了。可没想到……</p><p>看完首映场又睡了一次书店之后我回了学校准备期末考试，大概快有两个星期的时间，开头L还时不时发个消息过来但后来却没了信，有天还突然找我借钱，我看她QQ没啥异常说话语气表情也都跟平时一样没多想就借了。</p><p>然后突然就出事了，有天晚上D告诉我L失踪了，因为有两门考试缺考辅导员找不到人开始问学生了。不一会儿电话就打过来了，我也没多想什么，把自己知道的都说了。再过了会儿她妹妹找到我了，我把L手机的账号问了出来，位置自然是关掉了的，然后把通讯录找了出来一个个打过去问。</p><p>结果还是一无所获。</p><p>我还能有什么办法，只能等待。还算好，她自己跑了回来。比较简单的经过是，男的软禁了她，带着她旅游打游戏，骗了点财物。</p><p>然后她母亲来了，把她带了回去。</p><p>第二个学期，我删除了她所有的联系方式。听说她因为各种原因，住校外去了，最后听到她的消息是她办了休学。</p><h2 id="悔"><a href="#悔" class="headerlink" title="悔"></a>悔</h2><p>其实关于L的事情，我后来回想起来，一直有些悔意。</p><p>比如说后来如果我没有生硬的去切断联系，比如说那晚我去吃了饭把她带走了，比如说我当时没全盘听信D的话，可能L就不会落到后来要办休学的地步吧。</p><p>其实还有一个故事，不过是关于另外一个异性的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;声明&quot;&gt;&lt;a href=&quot;#声明&quot; class=&quot;headerlink&quot; title=&quot;声明&quot;&gt;&lt;/a&gt;声明&lt;/h2&gt;&lt;p&gt;本故事纯属虚构，如有雷同，那肯定是真的。&lt;/p&gt;
&lt;h2 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="杂" scheme="https://blog.xinoassassin.me/tags/%E6%9D%82/"/>
    
      <category term="Memories" scheme="https://blog.xinoassassin.me/tags/Memories/"/>
    
  </entry>
  
  <entry>
    <title>游戏列表</title>
    <link href="https://blog.xinoassassin.me/2019/01/game-list/"/>
    <id>https://blog.xinoassassin.me/2019/01/game-list/</id>
    <published>2019-01-26T14:55:17.000Z</published>
    <updated>2019-02-07T13:35:26.530Z</updated>
    
    <content type="html"><![CDATA[<p>简单记录下打过的游戏，先是按系列字母顺序排列，系列中按年代顺序排列。日厂开发的游戏会标注日文，如果没有英文就放在最后。</p><ul><li><p>Assassin’s Creed II</p><p>通关2遍</p></li><li><p>Assassin’s Creed Brotherhood</p><p>通关</p></li><li><p>Assassin’s Creed Revelations</p><p>主线未通关，剧情基本了解</p></li><li><p>Assassin’s Creed III</p><p>通关，DLC 没打</p></li><li><p>Assassin’s Creed IV Black Flag</p><p>通关，DLC 没打</p></li><li><p>Assassin’s Creed Unity</p><p>通关，DLC 打了开头</p></li><li><p>Assassin’s Creed Syndicate</p><p>通关，DLC 打了开头</p></li><li><p>Assassin’s Creed Origins</p><p>第二章左右</p></li><li><p>Assassin’s Creed Odyssey</p><p>进度在中部</p></li><li><p>Borderlands 2</p><p>没通关，刷过瘾了</p></li><li><p>Call of Duty</p><p>通关，United Offensive 通关</p><p>通关</p></li><li><p>Call of Duty 2</p><p>卡在最后三关</p></li><li><p>Call of Duty 4: Modern Warfare</p><p>通关</p></li><li><p>Call of Duty: World at War</p><p>通关</p></li><li><p>Call of Duty: Modern Warfare 2</p><p>通关</p></li><li><p>Call of Duty: Black Ops</p><p>通关</p></li><li><p>Call of Duty: Modern Warfare 3</p><p>通关</p></li><li><p>Call of Duty: Ghost</p><p>刚开头</p></li><li><p>Call of Duty: Black Ops 4</p></li><li><p>Celeste</p><p>开坑</p></li><li><p>Counter-Strike</p></li><li><p>Counter-Strike: Global Offensive</p></li><li><p>Danganronpa: Trigger Happy Havoc <em>ダンガンロンパ 希望の学園と絶望の高校生</em></p><p>开了个头</p></li><li><p>Darksiders</p><p>第一遍在沙漠打沙虫前不敢玩了，第二遍还没拿到拳套</p></li><li><p>Diablo III</p><p>剧情通关</p></li><li><p>Dishonored</p><p>开了个头，觉得不太适合自己</p></li><li><p>DmC Devil May Cry</p><p>同上</p></li><li><p>Dota 2</p><p>弃坑，只看比赛</p></li><li><p>Fallout 4</p><p>开了个头，觉得不太适合自己</p></li><li><p>For The King</p><p>联机不顺畅，跑团刚开就断</p></li><li><p>Gorogoa</p><p>完成</p></li><li><p>Grand Theft Auto V</p><p>通关，杀了老崔的结局</p></li><li><p>Half-Life</p><p>开了个头，害怕异型</p></li><li><p>Half-Life 2</p><p>同上</p></li><li><p>Hexcells</p><p>完成</p></li><li><p>Hexcells Infinite</p><p>几乎完成</p></li><li><p>Hexcells Plus</p><p>几乎完成</p></li><li><p>Hitman: Absolution</p><p>开了个头，有晕眩感没能打下去</p></li><li><p>Hook</p><p>完成</p></li><li><p>Left 4 Dead 2</p><p>美好回忆，只在过去</p></li><li><p>Mario Kart 8 <em>マリオカート8</em></p></li><li><p>Mini Metro</p></li><li><p>NieR:Automata</p><p>进度在第三章左右</p></li><li><p>Ori and the Blind Forest</p><p>到达第二个目标点</p></li><li><p>Overcooked!</p><p>差一点通关</p></li><li><p>Overcooked! 2</p><p>通关</p></li><li><p>Overwatch</p><p>美好回忆，只在发售第一个月</p></li><li><p>PLAYERUNKNOWN’S BATTLEGROUNDS</p><p>美好回忆，只在过去</p></li><li><p>Pokémon: Let’s Go, Pikachu! <em>ポケットモンスター Let’s Go!</em></p></li><li><p>Portal</p><p>开了个头</p></li><li><p>Portal 2</p><p>单人和双人均完成</p></li><li><p>Rise of Nations</p></li><li><p>Shadowverse</p><p>弃坑</p></li><li><p>Sid Meier’s Civilization V</p></li><li><p>Sid Meier’s Civilization VI</p><p>等更新的 DLC</p></li><li><p>Sniper Elite V2</p></li><li><p>Splatoon 2</p><p>刚入门，每天涂两把</p></li><li><p>Stardew Valley</p></li><li><p>Super Smash Bros. Ultimate</p><p>解锁40+人物，命魂进度50%</p></li><li><p>Team Fortress 2</p></li><li><p>The Legend of Heroes VI: Sora no Kiseki <em>英雄伝説 空の軌跡FC</em></p><p>通关</p></li><li><p>The Legend of Heroes: Sora no Kiseki SC <em>英雄伝説 空の軌跡SC</em></p><p>第一章</p></li><li><p>The Legend of Heroes: Zero no Kiseki <em>英雄伝説 零の軌跡</em></p><p>通关</p></li><li><p>The Legend of Heroes: Ao no Kiseki <em>英雄伝説 碧の軌跡</em></p><p>第三章</p></li><li><p>The Legend of Zelda: Breath of the Wild <em>ゼルダの伝説 ブレス オブ ザ ワイルド</em></p><p>开坑</p></li><li><p>The Witcher</p><p>10小时打了个开头</p></li><li><p>The Witcher 2: Assassins of Kings</p></li><li><p>The Witcher 3: Wild Hunt</p><p>十多小时打了个开头，打算重开档</p></li><li><p>Tomb Raider</p><p>通关</p></li><li><p>Tom Clancy’s Rainbow Six Siege</p><p>300小时还是菜鸡</p></li><li><p>Tom Clancy’s The Division</p><p>开头</p></li><li><p>Torchlight</p><p>开头</p></li><li><p>Torchlight II</p><p>开头</p></li><li><p>Undertale</p><p>通关一周目，二周目不想打</p></li><li><p>Warcraft III</p></li><li><p>Watch_Dogs</p><p>主线进度中部左右</p></li><li><p>WHITE ALBUM2</p><p>IC 一周目，CC 雪菜线，coda 雪菜 TE、冬马 TE</p></li><li><p>World of Goo</p></li><li><p>World of Warcraft</p><p>永远的110级奥术法师</p></li><li><p>Ys VIII: Lacrimosa of Dana <em>イースVIII -Lacrimosa of DANA-</em></p><p>开坑</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简单记录下打过的游戏，先是按系列字母顺序排列，系列中按年代顺序排列。日厂开发的游戏会标注日文，如果没有英文就放在最后。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Assassin’s Creed II&lt;/p&gt;
&lt;p&gt;通关2遍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Assassin’s C
      
    
    </summary>
    
    
      <category term="Game" scheme="https://blog.xinoassassin.me/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>杂（五）</title>
    <link href="https://blog.xinoassassin.me/2019/01/something-4/"/>
    <id>https://blog.xinoassassin.me/2019/01/something-4/</id>
    <published>2019-01-05T21:07:01.000Z</published>
    <updated>2019-02-03T06:24:46.102Z</updated>
    
    <content type="html"><![CDATA[<p>夜晚是属于自己的。</p><p>没有了白天的临街窗外的喧嚣，只剩下房间里还在响的几个风扇声和硬盘的响动。</p><p>你再一次地想起这一年来发生过的事情。</p><p>去年的这个时候，你头一次站到全年级面前主持活动，头一次试探着自己能达到的高度，高中之后，你头一次这么高调。</p><p>然后是又一年的沉沦，什么都没干，什么都没做成。</p><p>却又很累，压力越来越重，睡眠质量越来越差，开始长期的熬夜与通宵消耗自己为数不多的生命力。</p><p>想要做梦啊，无奈梦境似乎已经快离我而去了，无论我怎么地去呼唤它，一觉醒来却又是什么都不记得，然而精神上的疲乏告诉我，你一定在刚才经历了些什么。</p><p>又回想了一遍 ReLife，那可能是最近两年中看的感触最深的一部动画了。想回，却又不想回到高中时代。李宗盛说既然青春留不住还是做个大叔好，但是我真的不想变成别人口中的大叔，我还是想当一个比那时候更加成熟，但却是被人称为少年的人。</p><p>终于也能用平常心去面对有特殊感情的人了。</p><p>终于也能做到父亲多年前期望的那样「圆滑」了，可这真不是我想要的。</p><p>终于也能做到和母亲吵架时不吊起喉咙吼她了，可她还是要继续念叨我。</p><p>终于也会在一个人看电影时不再克制自己的眼泪了。</p><p>人生确实是由一个个选择组成的，你看不见的蝴蝶效应在一次次选择中泛起巨大的波纹。</p><p>我现在的愿望是回到一年前的这个时候。</p><p>但是，却没有后悔药，没有能让你回到 15 岁的药丸，更没有哆啦 A 梦的时光机，有的只是你的妄想和「如果那样就好了」的感叹。</p><p>不要再错过什么了，但这又是不可能的，活着太无奈了，就像自己毫无主动权一般。</p><p>又会想到命运和宿命，他们究竟存不存在呢，究竟是你自己的意识主导着你自己的行动与未来还是冥冥之中的力量已经将这一切都安排好了呢？</p><p>可能上帝和爱因斯坦，真的是同时存在着的吧。</p><p><code>&gt;&gt;endl;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;夜晚是属于自己的。&lt;/p&gt;
&lt;p&gt;没有了白天的临街窗外的喧嚣，只剩下房间里还在响的几个风扇声和硬盘的响动。&lt;/p&gt;
&lt;p&gt;你再一次地想起这一年来发生过的事情。&lt;/p&gt;
&lt;p&gt;去年的这个时候，你头一次站到全年级面前主持活动，头一次试探着自己能达到的高度，高中之后，你头一次这么
      
    
    </summary>
    
    
      <category term="杂" scheme="https://blog.xinoassassin.me/tags/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>好き</title>
    <link href="https://blog.xinoassassin.me/2019/01/suki/"/>
    <id>https://blog.xinoassassin.me/2019/01/suki/</id>
    <published>2019-01-03T08:38:43.000Z</published>
    <updated>2019-02-03T06:24:46.107Z</updated>
    
    <content type="html"><![CDATA[<p>2019 年的头一篇文章，我决定献给自己的感情。</p><h2 id="好き"><a href="#好き" class="headerlink" title="好き"></a>好き</h2><p>喜欢上一个人与认识到自己喜欢上她往往是在两个时间点，名为喜欢的种子都是在不经意间被种在心底，生根发芽慢慢开始向着一棵参天大树成长。发现这棵树的名字，可能已经是它长成一棵小树苗的时候了，于是坐立不安，在继续让它长下去与早日拔除的选择之间徘徊。</p><p>最终还是选择让它继续长下去，却不给它施加过多的养分，任其自然。结果有一天，这棵树实际的主人给它施了很多肥，浇了很多水最后又把浴霸开着在它顶上疯狂照，结果两天之内它就从一棵小树苗变成了占据整个心房的参天大树了。</p><p>这可怎么办。开始坐卧难安，胡思乱想。</p><h2 id="片思い"><a href="#片思い" class="headerlink" title="片思い"></a>片思い</h2><p>好想和她说话好想知道她的事情好想和她吵嘴好想和她一起听歌好想和她一起玩好想和她说我喜欢你怎么办怎么办怎么办</p><p>结果还是只能强行控制住自己，你已经是个成年人了，不要还是像个小孩子一样什么都不管冲上去把自己的感情一股脑的宣泄给对方。</p><p>半夜醒来不知道为什么，第一时间起来翻她的账号。啊，原来还没睡啊，于是再次打开聊天界面，呆看了半天打了句话又删掉。</p><p>会时不时的去寻找她曾经留下的痕迹，发现对方和自己的共同点会兴奋半天，但是又不能唐突的去说，只能在平时插一点内容进去。</p><p>小心翼翼地守着自己这份感情不被别人发现，又好想找到能分享心情的人。</p><p>把对方的名字变换形式写进自己的 ID 里，害怕有人发现的同时又期待着对方能自己看到。</p><p>还顺便修改了自己用了好几年的常用密码。</p><p>偷偷的准备着给对方的礼物，却不当心全说漏嘴了，一点惊喜感都没有了。</p><p>于是又开始冥思苦想，终于找到个另外的算是惊喜的附加物。</p><p>然而却发现自己越来越控制不住自己了。</p><h2 id="告白"><a href="#告白" class="headerlink" title="告白"></a>告白</h2><p>这可怎么办才好呢。</p><p>这可怎么办才好呢。</p><p>时机没到，但是好想说。</p><p>99.9%的可能性不会成功，但是好想说。</p><p>说完了做不成朋友了怎么办，但是好想说。</p><p>我好累，快撑不下去了。</p><p>但是，就是喜欢啊。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2019 年的头一篇文章，我决定献给自己的感情。&lt;/p&gt;
&lt;h2 id=&quot;好き&quot;&gt;&lt;a href=&quot;#好き&quot; class=&quot;headerlink&quot; title=&quot;好き&quot;&gt;&lt;/a&gt;好き&lt;/h2&gt;&lt;p&gt;喜欢上一个人与认识到自己喜欢上她往往是在两个时间点，名为喜欢的种子都是在不经
      
    
    </summary>
    
    
      <category term="杂" scheme="https://blog.xinoassassin.me/tags/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>New Age 音乐</title>
    <link href="https://blog.xinoassassin.me/2018/12/new-age-music/"/>
    <id>https://blog.xinoassassin.me/2018/12/new-age-music/</id>
    <published>2018-12-18T18:00:00.000Z</published>
    <updated>2019-02-03T06:24:46.044Z</updated>
    
    <content type="html"><![CDATA[<p>New Age 派音乐可谓是当今音乐流派中包含乐曲最为宽泛的一种流派，笔者最早开始喜欢上音乐就是因为听这个流派，这个流派很大的一个特征就是以器乐为主，形式可能有传统的器乐合奏，也可能是电子乐，此外也不乏一些混有人声的佳曲。</p><p>此文简单推荐一些我常听的名家，歌单：<a href="https://music.163.com/#/playlist?id=2563249859" target="_blank" rel="noopener">https://music.163.com/#/playlist?id=2563249859</a></p><h2 id="Secret-Garden"><a href="#Secret-Garden" class="headerlink" title="Secret Garden"></a>Secret Garden</h2><p>Secret Garden，一般译为神秘园，其鼎鼎大名完全无需笔者多言。这个仅有两个人——一位作曲作词家 Rolf Løvland 和演奏演唱家 Fionnuala Sherry——组成的「乐队」是将笔者带入音乐世界大门的领路人。其出道曲 <em>Nocturne</em> 和一专同名曲 <em>Song from a Secret Garden</em> 经典到无以复加的地步，后来的 <em>You Raise Me Up</em> 更是被 Westlife 所翻唱，为千万人所知。</p><p>神秘园的音乐，笔者完全不知道如何去做评价，只想告诉读者，去听、去享受就对了。</p><h2 id="Yanni"><a href="#Yanni" class="headerlink" title="Yanni"></a>Yanni</h2><p>Yanni，是推荐 New Age 时永远绕不开的一位大师。一曲 <em>Nightingale</em> 让他为中国人所知。雅尼的风格极为多变，时而喜欢玩弄器乐，时而采用电子乐，这里想推荐雅尼近几年的两张专辑：<em>Sensuous Chill</em> 和 <em>Truth of Touch</em>。这两张专的电子风格极为丰富有趣，一位六十四岁的大叔像个二三十岁的 DJ 一样把玩着电子乐，曲曲耐听。</p><h2 id="Omar-Akram"><a href="#Omar-Akram" class="headerlink" title="Omar Akram"></a>Omar Akram</h2><p>这位估计大家都不熟悉，但是如果提到以前 CCTV 新闻频道每个时段间隔的天气预报时间用的 BGM，读者就可能熟悉无比了。这段音乐截取自这位光头大神的 <em>Run Away With Me</em> <del>跟我私奔</del>。他的曲子，更像是在模仿一种环境声音，当然钢琴+小提琴的组合也非常之多见，总之用来放松神经非常不错。</p><h2 id="Pacific-Moon"><a href="#Pacific-Moon" class="headerlink" title="Pacific Moon"></a>Pacific Moon</h2><p>Pacific Moon 是一个日本的厂牌，所以在他们家的音乐中，你能发现非常多的和风元素。在乐器的使用方面，大量采用了日本传统的民族乐器以及中国传入的传统乐器，同时配上西式乐器，打造出的完全就是器乐爱好者的乐土。</p><p>推荐的专辑是早期的<em>月Ⅰ、Ⅱ</em>以及<em>月Ⅲ</em>，这三张精选集基本能概括和平之月这个厂牌的内涵。之后的专题集因为听的比较少所以也不好给出自己的推荐。</p><p>这里扯一张来自于 Key 社的改编专辑，因为改编人员都是和平之月的成员所以勉强也可以视作和平之月的作品：<a href="http://music.163.com/m/album?id=74831&amp;userid=3314114" target="_blank" rel="noopener"><em>Ma-Na</em></a>，可以尝试下带有 New Age 风的 Key 社音乐是什么样子的。</p><h2 id="Jusqu’a-Grand-Pere"><a href="#Jusqu’a-Grand-Pere" class="headerlink" title="Jusqu’à Grand-Père"></a>Jusqu’à Grand-Père</h2><p>之所以推荐这个乐队，完全就是因为<em>千年の戀</em>这张碟，在听这张碟之前，笔者完全没想到原来一把吉他和一把小提琴能够碰撞出如此有魅力的音乐。强烈推荐，和风中带着一丝爵士乐的味道，非常舒服。</p><h2 id="姫神"><a href="#姫神" class="headerlink" title="姫神"></a>姫神</h2><p>将和歌融入新世纪音乐，给人以完全不同的感觉。</p><p>网易云上排名前五十的曲子，大部分都会给你上世纪八九十年代电子乐的感觉，实际上确实如此。姫神以他特有的时而和风时而波澜大气的风格吸引着笔者，所以也推荐出来。推荐曲目：<em>一人静</em>，<em>千年の祈り</em>和<em>虹橋</em>。</p><h2 id="S-E-N-S"><a href="#S-E-N-S" class="headerlink" title="S.E.N.S."></a>S.E.N.S.</h2><p>这个由两人组成的乐队同样是「各种耳熟却又不知道来源的音乐」的创造者。如果不是去年网易云的私人FM给笔者随机到了他们的曲子，那笔者可能真的不知道那么多耳熟能详的曲子的作者都是谁了。假如说想知道他们知名的曲子都有些啥，那打开网易云听前十首，相信笔者，你会恍然大悟的。</p><h2 id="David-Nevue"><a href="#David-Nevue" class="headerlink" title="David Nevue"></a>David Nevue</h2><p>纯粹的钢琴是怎么样的，听他的曲子就可以慢慢懂得。</p><hr><p>最后笔者想塞两首私货进这个歌单，都是来自于 <em>Pure -AQUAPLUS LEGEND OF ACOUSTICS-</em> 这张对笔者而言神一般存在的专辑，一首是上松範康的<em>永久に</em>，另一首是藤間仁的<em>末期の言葉～最期の誓い～静寂</em>。尤其是前者，从高中发现这首曲子之后一直到现在，我都没有听腻，那是一种完全没有办法用语言表达的震撼，对演奏者演唱者作曲家编曲家绝对的折服，请务必听完。</p><p><code>&gt;&gt;endl;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;New Age 派音乐可谓是当今音乐流派中包含乐曲最为宽泛的一种流派，笔者最早开始喜欢上音乐就是因为听这个流派，这个流派很大的一个特征就是以器乐为主，形式可能有传统的器乐合奏，也可能是电子乐，此外也不乏一些混有人声的佳曲。&lt;/p&gt;
&lt;p&gt;此文简单推荐一些我常听的名家，歌单：
      
    
    </summary>
    
    
      <category term="杂" scheme="https://blog.xinoassassin.me/tags/%E6%9D%82/"/>
    
      <category term="Music" scheme="https://blog.xinoassassin.me/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>我的单相思</title>
    <link href="https://blog.xinoassassin.me/2018/12/boy-loved-girl/"/>
    <id>https://blog.xinoassassin.me/2018/12/boy-loved-girl/</id>
    <published>2018-12-17T19:38:26.000Z</published>
    <updated>2019-02-03T06:24:45.982Z</updated>
    
    <content type="html"><![CDATA[<section style="text-align: center;"><br><br>2018年12月18日更新，这个故事彻底结束了，我续写了结尾部分。<br><br>—<br><br>今天，我来写一个男孩的恋爱故事：<br><br>—<br><br>男孩遇到女孩是在他十二岁的时候<br>那是初一刚开学<br>他带着被不公划分的愤懑来报了到<br>一眼望去，除了几个小学同班的，别的都不认识<br>就这样，他开始了他的初中生涯，一晃，到了初一下<br>男孩发育的晚，个子在那时的班上显得特别矮，于是便一直占据着第一排的座位<br>有一天，他注意到左边隔了一条“走廊”的女孩<br>“啊你是我小学隔壁班的那谁”，男孩想起来了<br>女孩很好奇，“我很出名吗”<br>“没，只是听过你的名字”，男孩解释道<br>有时他们就这样有一句没一句的聊着<br><br>—<br><br>男孩被家里管得紧，心思却野的很<br>在班上干了不少被人唾弃的事情<br>那个学期末，他考了个很次很次的排名，被骂的很惨<br>从此，他过上了周末补课的生活<br>整个初二，他都在跟成绩斗争着<br><br>—<br><br>一晃眼，初三了<br>男孩挺拼的，终于把成绩搞回去了<br>但心思野是没办法治的<br>荷尔蒙作祟下，他对一直都留意着的女孩产生了兴趣<br>他开始频繁的找女孩聊天，就像无数个人生活中发生的那样，他们开始慢慢互相了解<br>男孩突然发现自己早就喜欢上了女孩<br>他拙劣地表演着自己简单的喜欢<br>十一月<br>一次考试之后，班主任要调整座位<br>男孩略施小计就提前看到了班主任留在班级电脑上的新座位表<br>他看到班主任把他和女孩分在了一起<br>他高兴的差点晚上差点没睡着<br>第二天中午，换完座位的他，坐到了整个教室最左侧第三排靠窗的位置，旁边就是他喜欢的女孩<br>有那么一瞬间，他觉得自己是幸福的<br>成为同桌之后，说话更方便了，再加上男孩朋友们的“助攻”，感情增进的很快<br>在一个温暖冬日，即将放学的时候，男孩的告白不当心脱口而出了<br>“我喜欢你啊”<br>男孩眼中映着的女孩的脸，是窗外即将落山的夕阳的颜色<br>男孩也不知道发生了什么，日子一切照旧，嬉笑打闹，哭啼皆有<br>男孩是幸运的，从十一月之后，班主任再也没有调整过座位<br>直到第二个学期开始<br>即将分离的气氛开始浓重，中考也成了生活的绝对重心<br>男孩和女孩不知道怎么了，拌嘴的频率越来越高<br>两次模拟考之后，保送高中的名单确定了下来<br>男孩离县上最好高中的保送资格一步之遥<br>虽然他早就预感到了这个事实，但不禁还是有些受到打击<br>于是，班上走掉了许多人，座位又要调整了<br>这次，女孩坐到了男孩的左前方，男孩的同桌成了他当时最好的朋友W<br>男孩发现，女孩和W的关系好的不行<br>他们经常煲电话粥，上课还疯狂传纸条<br>男孩心里有些酸，终于有天发作了，一生气就一直不理会那两人<br>他们觉得很莫名奇妙，让男孩生了几天闷气，最后自然的消气了<br>清明节，女孩的爷爷去世了，第二天她来上课的时候，眼眶红的很<br>又一次模拟考，男孩的成绩出现了大幅下滑<br>老师开始找他，家长也在施加压力<br>初中最后的那段日子在浑浑噩噩间就过完了<br>最后男孩还是买了两分才进那所最好的高中<br>而女孩，则是考去了另一所学校<br>于是，男孩彻底与女孩分开了，物理距离上<br>考完之后，男孩和女孩一起在学校帮忙的时候<br>班主任和数学老师开他们玩笑<br>“我发现男孩上课不认真的原因是一直在看女孩”，数学老师笑嘻嘻的<br>男孩脸一红，瞟了一眼女孩，发现女孩也在看他<br>“要是一直都能在一起多好啊”，男孩在心中叹了口气<br>突然他想起来，女孩的QQ都还没加上<br>在他们还是同桌的时候，女孩把自己的密码给了男孩，虽然她说很多人都已经有她的密码了<br>男孩偷偷的把自己的密码跟女孩改成一样的，一直用到现在<br>半夜，男孩登上女孩的QQ，把自己加了进去<br>第二天，学校又要开班会，结束之后，女孩突然就问男孩<br>“你是不是登我Q了”<br>“是啊，我加了我自己”<br>“那你为什么不把分组给改了？”<br>“忘了”，男孩摸了摸头<br>女孩生气了，她把拳头砸在男孩肩上<br>男孩突然被重击了一下，吃痛，无名火也冒上心头<br>但他转念一想，还是他错在先，一句话都没说出口就离开了<br>正巧，下着雨，他搭了同学的车回家<br>一路上，车载音响都在放着信乐团的《离歌》<br>“真是切合今天呢”，男孩心想<br>就这样，一个暑假，双方谁也没理谁<br>男孩一直都想找机会道歉，但那句“对不起”却始终出不了口<br><br>—<br><br>马上，高中也要正式开学了<br>剩不了几天的时候，女孩突然联系了男孩<br>“今晚我要翘家找一个网友”，女孩说<br>网友是她很久之前就认识的一个大男孩<br>于是男孩陪她聊到很晚很晚<br>突然间，那几天，他们又迅速地熟络了起来<br>男孩也趁机把自己最好的朋友G介绍给了她<br>她看起来对G非常感兴趣<br>那几天是入学前的军训期间，他们三个也天天聊到很晚<br>G比男孩女孩都小上一级，因为父亲跟男孩父亲是发小，于是也就认识了<br>很快女孩发现自己和G有许多共同话题可以聊<br>开学了，男孩的手机被缴了<br>但男孩还是成功地约出了女孩，虽然地点是在G的家里<br>女孩和G第一次见了面<br><br>—<br><br>接下去的发展，简直是一个疯了的剧本家写出来的<br>女孩和她班上的一个男孩恋爱了，这不是她的初恋<br>男孩很迟才知道这件事<br>男孩像疯了一样地往女孩的空间留言<br>他终于真的受不了了<br>男孩把事情扩散的很大，连不在一个学校的友人W都打电话过来问男孩是不是真的要放弃了<br>“我累了，想休息”，男孩认真地回答<br>快要到女孩生日了，男孩认真地准备了她提到过想要的书<br>然后写了将近三十页A4纸的文字一起寄给了女孩<br>根据女孩的空间留言板记录看，她那几天一直在哭<br>男孩心也痛，自己为什么这么爱吃醋呢，他想<br>他也没想到自己会如此伤害到女孩<br>“唉，要不道个歉态度软下来继续做朋友吧”，他内心的一半这么想<br>“不行，她谈了恋爱还不告诉我，我接受不了当备胎的感觉，要惩罚她”，另外一半这么想<br>于是，就在每天的纠结中，迎来了寒假<br>男孩认识G后不久就被安利了不少动画片<br>高中刚开始那个国庆，他开始了萌二生涯<br>于是，整个寒假都几乎用来补番<br>快要开学的一天，女孩发了一条煽情说说，不知道求了多少人来转发好让男孩看见<br>男孩气早就消了，心也软的差不多了<br>他只是想再撑一撑给自己留存一些脸皮<br>然后开学前一晚，女孩和她的男朋友同时找到男孩来抱怨，他们即将分手<br>男孩哭笑不得<br>因为新一届实行的高一第一学期结束就分班的制度<br>男孩又一次来到了新的班级<br>“哦，原来你就是那个谁啊”，男孩发现不少人都听过他的名字<br>以他最意想不到的方式<br>进入高中之后男孩的心思没有放在学习上太多<br>而是一天到晚不务正业<br>他从高中进校开始就被打上了“问题学生”的标签<br>什么高中第一学期开学第二周搞错周一到校时间<br>晨会的时候，自己班级正巧站在正对着校门的台阶上目送他进校门<br>什么第二学期上课玩touch被收被赶出晚自修作为惩罚<br>总而言之，读书劲大不如前了<br>男孩稀里糊涂的混着日子<br>终于快放暑假了，因为课程改革的关系，学校安排了两天的实践课程<br>男孩选择了一门在机房上的课，然后把整个机房改造成了网吧<br>几乎所有人都在打游戏<br>第二天的时候，女孩来给男孩送外卖<br>男孩直接脱下自己的校服，女孩混了进来，就这么坐在男孩身旁看着他打了一下午的游戏<br>暑假<br>快到男孩的生日了，女孩很上心的叫了一些朋友，大家在大热天吃火锅<br>钱都是女孩付的，还送了一个男孩喜欢的角色的手办<br>因为不方便带进家里，男孩把礼物转交给了G保管<br>吃完火锅，一群人进了黑网吧打游戏，女孩却和G在那儿看动画聊天<br>男孩笑笑，也不在意<br>直到几个礼拜之后，他得知G一直在约女孩一起图书馆<br>有一天中午，女孩跟男孩说图书馆没位置了去G家里了<br>男孩终于急了<br>G把女孩称作自己的女仆<br>有一天，G发了一份女仆宣言给了男孩<br>男孩没明白啥意思，G也就没多说<br>G也进了男孩的高中，男孩有事没事就找G一起吃饭<br>男孩把自己的午饭钱全花在各式各样的杂志上了，只好蹭饭卡<br>但高二第一学期快结束的时候，男孩突然迷上了翘课去网吧<br>于是几乎整个高二第二学期的晚自修，男孩都是在网吧度过的<br>整个高二，男孩都没怎么和女孩说过话，女孩倒是寄过两封信<br>男孩嫌麻烦，一直都没写回信<br>很快的，高三了<br>最开始的一个月，男孩用尽了所有心思把《冰与火之歌》给看完了<br>顺带着在家长会上被狠批了一顿<br>男孩被调到了讲台旁边，他终于开始收心<br>班主任看着他有点起色的成绩放了点心，一个月后把他给下放了<br>于是他又开始散心<br>一天，他在书店里发现了一本之前从来没见过的杂志，叫做《新知》<br>其文章晦涩难懂，不少涉及到哲学内容，让男孩沉迷其中，直到晚自修班主任站在他面前<br>班主任一把夺过这杂志，走到在班级后面的水桶旁，三下五除二的，把书撕了，教室安静极了<br>“下了课来我办公室”，班主任说<br>不出意外的，男孩又被流放了<br>不能告诉家里，图书馆又每晚八点多就关门了，那去哪里好呢<br>男孩选择了网吧<br>寒冷的冬夜里，男孩拖着中饭晚饭几乎一点都没吃的身体，在那条长达五公里多的回家路上踩着单车<br>回家的路有一段和女孩回家的路是重合的<br>一天，他在回来的路上看到了熟悉的影子<br>是她，追上她，男孩用尽全力的踩脚踏<br>奈何，他所剩不多的力气在两座桥面前无能为力<br>连叫住她的声音都发不出，生怕喊住的，不是她<br>男孩就这么又开始混着日子<br>就是在这段日子里，他发现女孩的微博更新了，转发了好多情感类的鸡汤<br>他意识到肯定有些什么事情发生了<br>他在中午的时候拦到了G<br>“你跟她发生了什么？”，他质问道<br>G隐晦的表达出了他A了上去然后打出GG的故事<br>男孩又一次哭笑不得，他最不想发生的事情发生了<br>G又告诉他，一年前发给他的女仆宣言就是说他喜欢上了女孩<br>男孩再次无言<br>G还告诉他，G也写了很多很多文字，附上了礼物放在家门口看着女孩来取走<br>男孩已经不知道能怎么表达自己的情感了<br>他回到教室，开始写信<br>信的内容只字不提她和G发生了些什么，只是写些日常<br>女孩的回信也是如此<br>仿佛他们回到了最早的时候<br>三四次通信之后，又是新学期<br>一天男孩的家里没做早饭<br>男孩选择去女孩家门口的早餐店买<br>刚给完钱接过东西，他的余光看到一辆电动车从小区驶出<br>直觉告诉男孩就是她<br>他飞奔上车，像那个冬夜里那样用尽全力去追赶<br>可惜，最终还是差那么点距离<br>男孩还是没能喊出她的名字<br>离高考就只剩几天了<br>男孩最后一次翘课去网吧，似乎是一种告别仪式<br>他没等到自己学校的放学时间离开，而是在女孩放学时候去了她的校门口等她<br>他真的等到了她，可能是有史以来第一次，他们一起回家<br>路上，他也只能嘘寒问暖提些无关紧要的话题<br>他还能提些什么呢？<br>太快了，就像高中三年的速度一样，他们分别了<br><br>—<br><br>男孩考去了遥远的C市，而女孩则是在就近的H市就读<br>暑假的最后一段时间，因为一些变故，男孩痛不欲生<br>事情解决之后，男孩家不得不安排一顿大学酒<br>男孩邀请了她，还有G是不得不邀请的<br>男孩知道会很尴尬<br>她来了，一身白裙，很漂亮<br>G自己坐在一旁，玩着手机<br>男孩酒量不行，几杯红酒下肚已经进入了半倒的状态，连同学什么时候走的都不知晓<br>那是最后一次和她见面<br>进入九月，那天就要出发前<br>男孩想起还有一些材料要复印<br>于是约了友人H载他<br>路上，H提到要不要把她再叫出来见个面<br>男孩想了想，“没时间算了吧”<br>H摇了摇头，也没再多说什么，最后他们拍了拍肩告别<br><br>—<br><br>大学刚开始的时候，男孩还会给她打电话聊天<br>几次一聊就是半小时<br>男孩发现自己还是放不下女孩<br>放不下意味着不可能开始新的感情<br>光棍节，趁着酒意，他找到女孩<br>“不要异地”，女孩明确的拒绝了他<br>他笑了笑<br>年末的时候，又因为一些变故，男孩的心理压力大到承受不了了<br>他终于再次打了女孩的电话<br>断断续续地倾诉到手机欠费<br>这是他最后一次听到她的声音<br>从此，男孩再也没联系过女孩<br>女孩也没联系过男孩<br>直到一年半后<br><br>—<br><br>大二的寒假，男孩约G一起去上海玩<br>途中，男孩提起女孩<br>“你和她怎么样了”<br>“啊，加回好友了”<br>也没聊更多<br>五月末，G突然找到男孩，问他暑假要不要一起去某站的演唱会<br>男孩算了算手头的钱，“手头有点紧，还是算了吧”，他回复说<br>暑假<br>男孩找G一起去J市修手机，归途，无意间男孩看到G的淘宝记录，两张票<br>“你和谁一起去啊”，男孩好奇的问<br>“哦，没告诉你吗，你不去我就找了她啊”，G很坦然<br>“你们和好了？什么时候”<br>“不是告诉过你了吗？她加回我好友了啊”<br>男孩心中开始充满不安<br>但他强装出一副镇定的模样<br>“你们酒店要押金你钱够吗”，男孩递出一张信用卡，“这里面还有点钱，你拿着用以后还我”<br>“记得带套”，他最后叮嘱了一句<br>原本他以为他已经放下的感情，又开始在他心中冲撞<br>他坐卧不安<br>临行前几天，他终于忍不住了，在女孩的留言板留下了两年后的第一句话<br>没想到女孩迅速找到了他，“你想说什么，赶紧说我看着的”<br>他有些慌，打了字又删掉<br>“你想说什么发出来吧，我明天还要早起先睡了”，女孩似乎很忙<br>男孩呼出一口气，扔给对方一个99+<br>却两天没收到女孩的回复<br>终于，他等到了回复<br>可那几乎是陌生人的感觉，不是他想要的回复<br>有总归比没有强吧，男孩心想<br>男孩早就反思过自己的过错，但已经是既成事实了，没有后悔药<br>行程第二天早上，他看到G很早就在线了<br>“她一回酒店就睡着了”，G这么说<br>“这酒店服务太好了还给加了床”，G还抱怨<br>男孩笑笑，再也没跟G提起过她<br>他准备好了一个人去旅行<br><br>—<br><br>又是一个寒假，照例，G会来男孩家一趟交换点资料什么的<br>男孩旁敲侧击提起女孩<br>“啊，她，我女朋友啊”，G云淡风轻<br>男孩还是只能笑笑，转移了话题<br>他不信，他不愿相信<br><br>—<br><br>男孩又开始找女孩说话，只是只敢以留言板的形式<br>他们似乎回到了最早的时候，在对方的留言板上你一句我一句的<br>不同的是，男孩的留言板上，没有别人的留言<br>今天，男孩终于感受到了一丝异样<br>女孩和G在用同样的聊天习惯说话<br>男孩笑笑，既成事实，不想承认也是摆在那里的<br><br>—<br><br>断断续续的，用留言形式互相告知彼此的日常生活<br>就这样过去了半年，男孩也没勇气约女孩出来吃个饭聊聊天<br>大四了，他也要走上社会了<br>突然在国庆前的某一天，G用不同以往的语气找到了男孩<br>“女孩好像出事了，有几天没跟我联系了”<br>“弄不好要跟我分手”<br>心中那股长久以来积攒着的感情终于爆发了，男孩直接一个电话给了G<br>“什么情况啊？”<br>“对不起，对不起”G用他那不同寻常的沙哑的声音道着歉<br>男孩终于没忍住，把这几年积蓄的感情一股脑地跟对方宣泄了出来<br>“我想你们两个好好的”<br>“我也想过撬墙角的事情，但做不到”<br>男孩在阳台上大吼，眼睛里的泪水不受控制<br>“我只剩你那么个朋友了啊”<br>G沉默地听着<br>末了，男孩终于冷静下来<br>“我打算飞回去找她”<br>“钱够吗？”<br>“票买好了”<br>“有啥事情跟我说，她的事情，我还是想知道一点的”<br>挂了电话<br>那几天可能是男孩整个大学生涯电话打的最多的几天<br>终于，G碰到了女孩<br>原来是女孩的父母要离婚了<br>G自己想得太多以为要分手<br>男孩知道后，无奈地笑了<br><br>—<br><br>经常出现在自己梦里的，终于不是她了<br>男孩终于能够心平气和地跟自己说：<br>“我不再喜欢她了”<br><br></section><p>故事到这里就结束了，在这里，我想重点感谢G，真的，这么多年，我的现实朋友真的只有你了，谢谢你一直陪着我，愿意忍受我的任性。</p><p>还有，谢谢女孩，初三和高中的回忆，不可能忘记的。</p><p>最后感谢能看到最后的各位，鄙人文笔粗糙，故事没有新意，看到最后实属不易。</p><p>最后附上残留的一点纪念品。</p><p><img src="/images/maid-words.png" width="70%"></p><p><img src="/images/letters.jpg" width="60%"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;br&gt;2018年12月18日更新，这个故事彻底结束了，我续写了结尾部分。&lt;br&gt;&lt;br&gt;—&lt;br&gt;&lt;br&gt;今天，我来写一个男孩的恋爱故事：&lt;br&gt;&lt;br&gt;—&lt;br&gt;&lt;br&gt;男孩遇到女孩是在他十二岁
      
    
    </summary>
    
    
      <category term="杂" scheme="https://blog.xinoassassin.me/tags/%E6%9D%82/"/>
    
      <category term="Memories" scheme="https://blog.xinoassassin.me/tags/Memories/"/>
    
  </entry>
  
  <entry>
    <title>这届玩家不行？</title>
    <link href="https://blog.xinoassassin.me/2018/12/bad-gamers/"/>
    <id>https://blog.xinoassassin.me/2018/12/bad-gamers/</id>
    <published>2018-12-14T12:24:10.000Z</published>
    <updated>2019-02-03T06:24:45.972Z</updated>
    
    <content type="html"><![CDATA[<p>今年下半年——实际上是从年中的 E3 就开始有一些征兆——某几个久负盛名的大厂突然就因为某场发布会或者是某个新游戏造成口碑断崖式下滑的惨案。这其中有</p><h2 id="Bethesda"><a href="#Bethesda" class="headerlink" title="Bethesda"></a>Bethesda</h2><p>贝塞在我心目中的形象一直以来都是不错的，这几年他们发行了不少曾在游戏史上留下过浓墨重彩一笔的那些老游戏的新作，而且这几年他们自己的新作质量也尚可，E3 甚至还搬出来 Starfield 和老滚六这两个只有一个标题的片子来压轴，尤其是后者，无数玩家翘首以待多少年贝塞给个准信，他们终于给了。</p><p>但是没想到，这家一直给我良心感的厂子，竟然会因为一个游戏，形象瞬间崩塌。没错，就是那个他们在今年 E3 上重磅公布的多人在线联机的 Fallout 76。</p><p>先是游戏质量一塌糊涂，大有追上并超过当年刺客信条大 BUG 的意思，然后是官方营销也出了问题。具体出了些什么问题各大资讯网站已经报道的很多了，这边就不再赘述。</p><p>但是贝塞，在当下，你已经不能再靠吃老本混日子过了。虽然说旗下工作室的游戏都是叫好不叫座的，但是起码叫好的声音比你们自家做的那几个玩意儿多太多了。我希望在 Starfield 和 ES6 中看到那个给人焕然一新又非常熟悉的 Bethesda Game Studio。</p><h2 id="Blizzard"><a href="#Blizzard" class="headerlink" title="Blizzard"></a>Blizzard</h2><blockquote><p>Do you guys not have phones ?</p></blockquote><p>暴雪始终是一个能让玩家又爱又恨的厂。这几年，大家都很清楚它在走下坡路，但是今年的暴雪嘉年华是着实的让许多老粉铁粉寒心了，让一个移动端 Only 的手游来压轴已经非常打破自己的底线了，然而之后一句「你们没有手机吗？」可以让这些寒心的粉丝的失望指数跌到了负值，甚至产生对暴雪的怒意。</p><p>作为一个玩过多年暴雪游戏，因为他们瞎几把改游戏而从粉转黑的玩家来说，我很乐意看到这种剧情。暴雪这帮子人可能是真的当「爹」当习惯了，他们几乎不听玩家社区的反馈。</p><p>这种自我作死的精神不是谁都学的来，也不是有资本的学的。短短两个月多的时间，动视暴雪的股价已经从最高点下跌超过了 40%，即使是中途公布了非常好看的半年报也没法控制注股价的下跌。如果说推出手机游戏是顺应市场发展的潮流，那么现在市场用他们专业的方式已经很好的告诉了暴雪：我们不需要你追随市场潮流。</p><p><img src="/images/ATVI-2018-12-14.png" width="70%"></p><p>然而，股价的下跌引发高层思考的结果似乎将他们导向了完全错误的方向，就在今天—2018 年 12 月 14 日—暴雪突然发布了<a href="https://news.blizzard.com/en-us/blizzard/22833558/heroes-of-the-storm-news" target="_blank" rel="noopener">风暴英雄接下来的企划</a>，这个刚通过推出 2.0 有点起色的游戏，却遭遇到了几乎是被暴雪「宣判放弃」的命运，取消官方联赛几乎是一款竞技游戏能够遭遇到的最惨的事情。不仅如此，他们还要从开发团队中抽调人手去其他项目组，这等于是说「我们接下来的更新会放缓」，风暴英雄一直以来引以为傲的快速更新也可能不再能够延续下去了。</p><p>唉，暴雪，好自为之吧。毕竟大家都不想看到一家曾带给我们这么多伟大作品的厂子就这么堕落了。</p><h2 id="EA"><a href="#EA" class="headerlink" title="EA"></a>EA</h2><p>EA 一直都在善恶相对的世界中扮演着「恶人」这个角色的厂子。行嘛，去年的星球大战：前线二还不够你们买教训的吗？哦，好像你们确实吸取教训了，内购方面收敛了。但游戏品质是什么玩意儿啊？战地五这种完成度也好意思放出来，还不如你继续跳票几个月，干脆跳票到明年跟大逃杀模式一起上线算了。好，你把半成品放出来了，那你们的更新就勤快一点，你看隔壁 COD，出来不也问题多得很，但人家更新还算是勤快。你们呢？新内容跳票，更新补丁迟缓，正式版推出没几天给打五折，随便哪个操作都是在透支战地这块老招牌。</p><h2 id="Ubisoft"><a href="#Ubisoft" class="headerlink" title="Ubisoft"></a>Ubisoft</h2><p>育碧今年的动作好像不怎么大。是的，它今年一共只出了<strong>三</strong>部 3A 级别的作品：Far Cry 5、The Crew 2 和 Assassin’s Creed Odyssey。这三部作品的风评虽然说不上是很好级别的，但也可以说是良作，尤其是奥德赛，这个我会在未来的长测中重点讲述。</p><p>经历了前几年的自我作死出来的惨痛教训和威望迪的收购风波之后，育碧看上去稳健了许多。而且今年 E3 上面，育碧的发布会还是最好看的那一家。然而就在大家期待 R6 的新季票内容消息的时候，他们却出人意料地宣布了一项全球性的游戏内容和谐计划——将减少游戏中存在的暴力、性和血腥内容，目的是在亚洲地区的推广上，不用说，明眼人都知道是针对大陆地区。</p><p>先不谈和谐过后这游戏过审的概率有多少，更不说明年游戏版号是否能够重启颁发。光是一个针对区域性的内容调整却要强行全球化，是AnvilNext 2.0 引擎不支持这种特性还是你们蒙特利尔想偷懒吗？欧美地区的游戏分级制度不够完善吗？</p><p>好在育碧还是会听社区的声音，不久之后，他们就撤回了全球性和谐的计划，转为针对区域提供和谐内容了。</p><p>在此我再次恭喜我们大陆的成年玩家，恭喜我们再次要用上全球特供内容了。</p><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><p>回过头来夸一下，今年本来有一些我不太抱有希望的游戏却出乎意料的好玩，对我说的就是 COD:BO4。可能也是我初中打了两年 COD4 联机的关系吧，这游戏的团队死斗就特别亲切，不用太好的枪法，就是突突突就完事了。Blackout 模式也做得比较轻松，比起 PUBG 来更好上手。</p><p><code>&gt;&gt;endl;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今年下半年——实际上是从年中的 E3 就开始有一些征兆——某几个久负盛名的大厂突然就因为某场发布会或者是某个新游戏造成口碑断崖式下滑的惨案。这其中有&lt;/p&gt;
&lt;h2 id=&quot;Bethesda&quot;&gt;&lt;a href=&quot;#Bethesda&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="Game" scheme="https://blog.xinoassassin.me/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>当前女友成为家人</title>
    <link href="https://blog.xinoassassin.me/2018/11/mamahaha/"/>
    <id>https://blog.xinoassassin.me/2018/11/mamahaha/</id>
    <published>2018-11-11T08:35:54.000Z</published>
    <updated>2019-02-03T06:24:46.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="导语"><a href="#导语" class="headerlink" title="导语"></a>导语</h2><p>可能是最近光棍节临近，生活空虚寂寞，外加之对于青春恋爱系作品的渴求日益增长，使得我在看到首页时间线的推荐之后的十小时内，吃奶一般地读完了目前连载的全部36章，读完之后大呼过瘾，故醒来马上开始码我的首篇安利文。（本文几乎不涉及剧透）</p><p><img src="/images/mamahaha.jpg" width="50%"></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>可能是真的不多见，也可能是鄙人见识过于短浅，以往的轻小说，会着力去描写和前女友的回忆的，除了《学生会的一存》之外，其他的我真的没能拜读到。而在各种机缘巧合，或者说作者的安排之下，从前女友的关系变到同在一个屋檐下，全天几乎24小时都在一起的义姐弟的，可能真的只有这部<a href="https://kakuyomu.jp/works/1177354054883783581" target="_blank" rel="noopener">《继母的拖油瓶是我的前女友》</a>。为什么我会因为这部小说头一回去尝试着去写一篇安利文呢？这边就给出几点，剩下的请大家阅读原著。</p><h3 id="安排"><a href="#安排" class="headerlink" title="安排"></a>安排</h3><p>本书前段多次出现的，就是主角对于神明（作者）安排的反复辱骂，这可能是作者的一种自嘲吧。但正因为在平淡的主角身上辅以现实生活中几乎不可能遇到的超低概率事件，又用了合理的方式去解释这种事件发生在主角身上的原因，使得原本带有一些奇幻系色彩的故事变得更为生动真实起来——“这好像确实会发生呢”——如同这种感想一般。很多轻小说采用的是事件推动情节发展，附带人物情感线，这就考验一个作者的安排能力到底如何——你不能太出格，也不能太平淡——而紙城境介在这点上已经做的相当不错了，虽然安排的几乎都是些日常事件，但是从头看下来没有一种乏味的感觉，而是一种似见未见的感觉，这点我们跳到<a href="#套路与反套路">套路与反套路</a>一节在进行详述。</p><h3 id="青春"><a href="#青春" class="headerlink" title="青春"></a>青春</h3><p>也许是最近读了太多 2ch 上的长篇故事了，像什么<a href="http://kanquwen.com/category/2ch_long/osananajimi-okasa/" target="_blank" rel="noopener">《青梅竹马春天就要去大阪读大学了》</a>，什么<a href="http://kanquwen.com/category/2ch_long/osananajimi-ichigo/" target="_blank" rel="noopener">《借给青梅竹马草莓棉花糖后》</a>，什么<a href="http://kanquwen.com/category/2ch_long/husky/" target="_blank" rel="noopener">《想要揭穿班上太完美女孩的弱点》</a>之类的文章，都是十多年前的老故事，但是也让我得以一窥你日当时普通高中生的生活实况。读得多了，一声感叹，原来你日 ACG 作品中许多的描写确实是来源于现实生活的，比如青梅竹马在青春期到来之际必定会疏远，比如和异性交往挺常见的什么的。</p><p>当然真的要扯青春这个话题我能给你再写个2000字来，邻国的轻小说作品中即使不是将主角置于青春时代的也大多都会带上那么一丝青春气息。“最美好”的年纪似乎确实值得被各种艺术作品大书特书，但是青春大多时候也只能作为作品的年龄背景，有了这个背景，作品中的很多情节就像得了免罪金牌一样，怎么招都说的通了。</p><p>然而本书却并没有过分的利用青春去写一些很出格的事情，当然了第二章那个除外，反而处在青春期对异性生理上的好奇与跟异性交流的那种羞耻感倒是描写的比较真实。互相作为前男女朋友的情况下长久居住在一起还是同班同学，每天除了睡眠时间和呆在自己房间的时间都是和对方在一起，难免过去被藏起来的情愫又会慢慢的化开，但又由于性格使然和其他各种各样的原因，让这两人没法好好的，坦率的说出自己心中的感情。然而在日常与非日常的各种事件推动之下，堵在心口的巨石也开始慢慢碎裂了，这也许是本书最吸引着我的一点吧，也就是所谓的成长。</p><p>很多人喜欢看这本是因为有糖吃，确实本书甜，但是这糖也不是直接给你摆到台面上，比如《青春野狼》经常用的那种方式来给你喂糖吃，而是需要你去自己寻找埋藏在文字中的糖。</p><h3 id="双视角"><a href="#双视角" class="headerlink" title="双视角"></a>双视角</h3><p>多视角的描写方式多见于群像剧作品中，比如《Gamers》，又比如《如果妹》。但是将视角限定于主角二人且以第一人称的方式来叙述故事的，在轻小说作品中我还是头一回见到。本书的前中段，基本是以双人的视角，一段事件在某人的视角过完一遍之后马上换人再过一遍，由于是第一人称描写，双方心理活动上的差别就很自然地为读者所捕捉，也就能解释读者阅读过程中产生的疑惑。</p><p>而且由于第一人称视角的限制，双方产生的各种不自然行为变成了谜题一般的存在——“咦，他（她）为什么这么干？”——这类问题在阅读的过程中时不时的就会在脑海中蹦出，使你反复去揣测人物（作者）的意图。更换视角之后，你在上一段产生的疑惑便会自然而然地解开，有时甚至会拍案叫绝，连连卧槽夸赞作者——这仿佛就是一种轻推理小说——就比如说目前简体译版的黄金周篇，就是带有一定的解谜元素的。</p><h3 id="套路与反套路"><a href="#套路与反套路" class="headerlink" title="套路与反套路"></a>套路与反套路</h3><p>轻小说读者最熟悉的是什么？套路。这几年能让人为之叫好的轻小说大多都是从套路中出发却跳脱出套路，比如平坂读标题误导向的《如果有妹妹就好了。》，比如鸭志田一的《青春野狼》，又比如“怎么将哥布林斩草除根”的《哥布林杀手》。</p><p>而本作设定上有套路吗？拖油瓶设定的作品近几年出名的有《工口漫画老师》和《如果有妹妹就好了。》等等，而前女友设定的不是太多见。如果把范围再扩大一点寻找相似作品，可以扯到《家有女友》，但是跟那部三角关系扯不断理还乱的漫画相比，本作拖油瓶只有一个，而且不像某渣男和某妹妹成为家人前上过床那样，至少本作男女主关系还是仅限于接吻状态的“纯洁”前男女朋友关系。所以这么一看，在大的情节设定上，紙城境介确实抓到了一个几乎没被用过的题材，写的确实也不错，所以能够火起来，也是必然。</p><p>再来看男女主的设定套路吗？男主是近几年挺吃香的文弱男青年，跟个大老师一样，但是没特别提过他的长相是不是很残念。而女主身上有一些套路存在，比如原土气妹原不显眼人士等等等等。而配角方面，有对青梅竹马的存在，男方是开朗系帅哥形象，女方是开朗系小可爱形象。</p><p>接着来看小情节，因大部分的小情节都是日常故事，所以很难具体的说是不是有套路的成分存在。</p><p>总结下来就是本作是反套路作品中掺杂了一些套路元素，大体上是一部反套路的存在。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>在简单查看了作者以往的作品之后我惊讶的发现，紙城境介以往的作品几乎都是“魔王勇者”类的冒险题材，这部“拖油瓶”可能是他公开的第一部将舞台搬至现实生活中，将题材改为青春恋爱系的作品。</p><p><img src="/images/works-by-kamishiro1.jpg" alt="works-by-kamishiro1"></p><p><img src="/images/works-by-kamishiro2.jpg" alt="works-by-kamishiro2"></p><p>而“拖油瓶”也并不是他文库化的出道作，之前的两部文库化作品都只有1卷就没有下文了。</p><p><img src="/images/works-by-kamishiro3.jpg" alt="works-by-kamishiro3"></p><p>意外的是，虽然之前不曾公开过青春恋爱系的作品，但是一公开，就吸引了不少读者。从上面第二张图的星星数量跳了一个等级也可以看出这部作品确实比作者之前的强太多了。</p><p>无论如何，我希望看到这篇文章的读者，不管你是不是日轻爱好者，还是普通文字读者，都可以去试着读一下这本即将文库化出版的网络轻小说。</p><p>目前大陆翻译首发在<a href="https://tieba.baidu.com/f?kw=%E7%BB%A7%E6%AF%8D%E7%9A%84%E6%8B%96%E6%B2%B9%E7%93%B6%E6%98%AF%E6%88%91%E7%9A%84%E5%89%8D%E5%A5%B3%E5%8F%8B" target="_blank" rel="noopener">继母的拖油瓶是我的前女友吧</a>，<a href="https://lightnovel.cn/forum.php?mod=viewthread&amp;tid=928710" target="_blank" rel="noopener">轻国论坛</a>有转载，EPUB 版见<a href="https://tieba.baidu.com/p/5862044760" target="_blank" rel="noopener">突然发现少了EPUB，论如何换着方式吃狗粮</a>。</p><p>当然，我们要支持正版，本书的文库版马上将于12月1日出版了，有能力，又喜欢本书的朋友可以多多支持一下，反正我是要买了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;导语&quot;&gt;&lt;a href=&quot;#导语&quot; class=&quot;headerlink&quot; title=&quot;导语&quot;&gt;&lt;/a&gt;导语&lt;/h2&gt;&lt;p&gt;可能是最近光棍节临近，生活空虚寂寞，外加之对于青春恋爱系作品的渴求日益增长，使得我在看到首页时间线的推荐之后的十小时内，吃奶一般地读完了目前
      
    
    </summary>
    
    
      <category term="ACG" scheme="https://blog.xinoassassin.me/tags/ACG/"/>
    
  </entry>
  
  <entry>
    <title>Latitude 5285 半长测</title>
    <link href="https://blog.xinoassassin.me/2018/10/latitude-5285/"/>
    <id>https://blog.xinoassassin.me/2018/10/latitude-5285/</id>
    <published>2018-10-17T13:15:41.000Z</published>
    <updated>2019-02-03T06:24:46.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="换机缘起"><a href="#换机缘起" class="headerlink" title="换机缘起"></a>换机缘起</h2><p>九月底，借来大概一年的 2014 款 ThinkPad S1 yoga 在频繁的使用过程中终于不堪重用，本来进过水的屏幕彻底好不了了。没办法，总不能让我背着重六斤还没算上电源适配器的大家伙每天上下班挤地铁吧我会死的。于是，九月中旬就开始在淘宝上寻找替代用品，因为 Yoga 算是一台 2 in 1 设备，所以还是打算买一台轻便的类似设备，先是盯上了 2017 年发售的 XPS 12 2 in 1，但是因为这系列都是超低压 CPU，性能上我是无法接受的，于是继续翻，运气还不错，DELL 在 Latitude 系列中也推出了类似的 2 in 1 设备，分为使用常规低压 CPU 和常规分辨率屏幕的 5285/5290 系列和使用超低压 CPU 和高分辨率屏幕的 7285/7290 系列。我也不知道 DELL 是脑子抽风了还是一心想学习巨硬和水果的作死精神，总之 Latitude 5285 正好符合我的需求，国内某宝上面也有几家在卖官翻货，价格也是我正好能承受的范围内（学费垫着），于是在国庆前夕，在一趟回学校的公交车上我点击购买了。</p><p><img src="/images/magic-word-by-Lin-Xiaoyu.jpg" title="一句充满魔力的咒语"></p><h2 id="购机波折"><a href="#购机波折" class="headerlink" title="购机波折"></a>购机波折</h2><p>顺丰速度还是快，两天到了。我提前下了班回去准备摸新机器。没有做仔细的检查，就看了看外表没有受损屏幕没毛病之后就插盘开始装系统，结果在那个蓝偏紫的首屏，我发现了触摸屏有异样，光标停留在靠近左下角的一个点上，当时还没在意，安装完系统开始用的时候发现真不对，屏幕下部有大范围触摸失灵的情况，马上联系了卖家说明情况，卖家也没多废话就给我说寄回来给我换。</p><p>国庆节第一天下午，换的机器到了，这次接手后做了详细的检查，这次发现左下角屏幕不正常，有一小块应该是漏液了。跟卖家反映了情况之后还是愿意给我换一台，但是实在是懒得折腾加上其他配件都到了，也就用了下来。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>讲了两大段废话，终于开始正文了，首先先夸一夸这机器。</p><h3 id="良心"><a href="#良心" class="headerlink" title="良心"></a>良心</h3><h4 id="预留天线"><a href="#预留天线" class="headerlink" title="预留天线"></a>预留天线</h4><p>相比起北美良心想，DELL 着实良心不少。比如连 ThinkPad X1 这种机型，你只要是不选配 WWAN 模组，那么你到手的机器里面是不会给你预留 WWAN 的天线的。而 DELL 就不一样了，无论哪个配置都是给你预留好了天线，你想要自己加，买张卡装上去就可以了。但比较遗憾的是，5285/5290 这个型号，不购买带有指纹的机型是不会给你来个留指纹位的后盖的，也就是说除非你愿意在后盖上打个孔，不然是无法使用主板上预留的指纹等设备的接口的。</p><h4 id="BIOS"><a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h4><p>为什么这里要提一句 BIOS 呢？因为我是北美良心想垃圾 BIOS 的长期受害者，原先的国行版 S1 Yoga 使用的单 2.4 GHz 的网卡，而且在 BIOS 里面指定了能够使用的网卡硬件 ID，使得用户无法自行更换更好的网卡。又因为 R6250 的坑爹 2.4GHz 问题，我没有办法让 S1 Yoga 和我的其他设备共存于同一网段下，要么是委曲求全使用性能更差的外部路由当主网关。而 DELL 就不同了，不仅仅不锁设备，BIOS 设定还非常详细实用，除了自带的诊断之外甚至连锁不锁 BIOS 的升降级都给你提供了开关。</p><h4 id="手册"><a href="#手册" class="headerlink" title="手册"></a>手册</h4><p>DELL 的 Owner’s Manual 是我见过的最详细的笔记本手册，手册中事无巨细的提供了包括但不限于机型参数、拆机方法、拆卸安装配件的方法等等等等。跟着这份手册来，你完全没有看网上拆机教程的必要。</p><h3 id="好"><a href="#好" class="headerlink" title="好"></a>好</h3><h4 id="LTE-amp-GPS"><a href="#LTE-amp-GPS" class="headerlink" title="LTE &amp; GPS"></a>LTE &amp; GPS</h4><p>我现在要吹爆所有预留 M.2 2240 的机器，因为加一个 WWAN 模组加上电信的 20GB 限速卡真的太方便了。Windows 10 对于 WWAN 设备的支持度也相当不错，提供了众多限制后台跑数据的开关，就是传统桌面程序不支持就是了。当时买卡的时候正值 iPhone XS (Max) 发售，Intel 基带背锅的时间段，所以心一狠加了一点钱买了高通的卡（Intel 的卡支持到 Cat.4，而高通的是 Cat.6），实测出来电信 LTE 的速度相当可以，昨天甚至跑出了 4.2 MiB/s 的平均速度。因为这卡还自带 GPS 功能，所以使用系统自带的地图是可以看到实时位置的，照理说其他应用也可以直接使用它提供的 GPS 数据，但最近还没空研究这个，等下次上飞机前看看。</p><h4 id="电磁屏"><a href="#电磁屏" class="headerlink" title="电磁屏"></a>电磁屏</h4><p>其实原来的 S1 Yoga 国外版本是自带电磁屏的，但是北美良心想在国行版本上以更贵的价格发售了不带电磁屏的版本。我是一直都想买个带电磁屏的设备来记笔记的，结果到了大四出去实习了才拥有这么一台。DELL 采用的电磁压感技术来自于熟悉的 Wacom，笔并没有随机附送，还好也不算是太贵，将近 300 大洋一支还是比水果家的强不少的。但是还是要吐槽一下巨硬，宣布 OneNote 免费之后，连 Office 365 中默认都不带上桌面版的 OneNote 了，默认启用的是 UWP 版本的 OneNote。不过因为之前用的少也不太清楚这两者有什么区别，总之压感至少是没有问题的。</p><h4 id="散热"><a href="#散热" class="headerlink" title="散热"></a>散热</h4><p>当初机子还没到手的时候寻找了一些国内用户的评测来看，不知为何这模具的散热相当了得，虽然是主动散热但是平常你完全感觉不到风扇的声音。而温度，比如现在我正在使用电池码字，性能设置是开到 100% 的，但是 CPU 频率不高，温度也就只有接近 40℃ ；到手时也做过温度压力测试，甚至可以将 7300U 维持满整个 28 秒不泄，以这个体积的散热系统来说已经是合格的了，更为惊喜的是，BIOS 设定相当给力，长时间烤机也还是可以维持到默频 2.6GHz 之上。而看到中文论坛有说统一模具但是换用八代低压 U 的 5290 甚至可以压住四核八线程的低压 i7。所以我对于这一块是相当满意的。</p><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>机器的扩展是一个 USB 3.1 Gen 1 Type A 以及两个支持 DisplayPort 输出的 USB-C 口，虽然 USB-C 口不支持 Thunderbolt™ 3，但是两个之多的数量比起只带一个 USB Type A 的 Surface Pro 来已经完全是秒杀了。另外 DELL 在推进 USB PD 上也算是比较积极的，在 BIOS 中将供电方式设置为 ExpressCharge 之后就可以开启快充，实测在用 Apple 87W 适配器时充电真的快了很多，而自带的适配器是 45W 的。</p><h4 id="携带"><a href="#携带" class="headerlink" title="携带"></a>携带</h4><p>携带真的非常方便，键盘一盖就跟平板毫无区别直接拿走。值得一提是这个键盘（保护盖），它 有 键 程。据某位不愿意透露姓名的沙包说，只要是有键程的键盘就比采用新键盘的 MBP 的强，实际体验了一下，果真如此，MBP 上的新键盘甚至不如 Macbook 12 上面的那块同样几乎没有键程的键盘。并且触摸板面积也不算太小，就是手感上确实比不上 S1 Yoga 那个“带弹簧”的触摸板。</p><p>因为自带自适应的支架，有桌子的时候竖着放上面一按支架就弹出来了，就是支架的最小角度稍微大了一些，在床上用的时候不是太舒服。</p><h3 id="不太行"><a href="#不太行" class="headerlink" title="不太行"></a>不太行</h3><h4 id="屏幕"><a href="#屏幕" class="headerlink" title="屏幕"></a>屏幕</h4><p>夸了电磁屏，但是对于这块屏幕还是有不满意的地方。不知道 DELL 是为了节约成本或是其他什么原因，分辨率虽然完全合格，1920 x 1280 在 12 寸屏幕上看起来已经是相当精细了。但是在色彩方面，可能就不能说准了，跟几年前的 U2312HM 比起来，色彩甚至出现了一些过饱和，而且面板应该是少了一层过滤，屏幕在镜头前存在彩虹纹，反射光源时同样可见。</p><h4 id="续航"><a href="#续航" class="headerlink" title="续航"></a>续航</h4><p>虽然自带的电池容量还是有 44Wh 之多，但是不知道是因为挂在 LTE 网络上同时开启了 GPS 的缘故还是 Windows 10 本身的耗电量比较大的问题，一般典型外带最长只有五六个小时电量就降到 30% 左右了（后台开着 KanColle）。也就算是基本够用的水平吧，不过至少不是超低压 CPU，这个水平已经很满意了，只是希望电池能在大点，把缺失的指纹模块那部分的空间利用起来就好了。</p><h2 id="抱怨两句"><a href="#抱怨两句" class="headerlink" title="抱怨两句"></a>抱怨两句</h2><p>这台机器买的我是非常的舒服，该有的都有，还带了一些惊喜给我，估计之后长久都会带着它跑来跑去了。但是提到跑来跑去就有话要说了，把本来打算写《杂》的话搬到这里来讲吧。</p><p>九月头上开始实习之后，深刻体会到了你国上班一族的现状，早起挤地铁挤公交，睡眠不足靠咖啡因撑，中午午休睡成一片，晚上疯狂加班。每天都是固定的日子，也难怪会把人的意志给消磨干净，难得的周末补两天觉打打游戏就没了，自然的也就没什么心思想别的东西了。</p><p>所以如果有还没上大学或者是刚开始大学生涯的同学，记得真的要在大学谈次恋爱，不然毕业之后真的没有时间去认真谈恋爱了。</p><p><code>&gt;&gt;&gt;endl;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;换机缘起&quot;&gt;&lt;a href=&quot;#换机缘起&quot; class=&quot;headerlink&quot; title=&quot;换机缘起&quot;&gt;&lt;/a&gt;换机缘起&lt;/h2&gt;&lt;p&gt;九月底，借来大概一年的 2014 款 ThinkPad S1 yoga 在频繁的使用过程中终于不堪重用，本来进过水的屏幕彻底
      
    
    </summary>
    
    
      <category term="Hardware" scheme="https://blog.xinoassassin.me/tags/Hardware/"/>
    
  </entry>
  
  <entry>
    <title>GeForce RTX 前瞻——在图灵架构初来乍到之时</title>
    <link href="https://blog.xinoassassin.me/2018/08/before-Turing/"/>
    <id>https://blog.xinoassassin.me/2018/08/before-Turing/</id>
    <published>2018-08-14T15:16:25.000Z</published>
    <updated>2019-02-03T06:24:45.977Z</updated>
    
    <content type="html"><![CDATA[<h2 id="终于确认的-Turing"><a href="#终于确认的-Turing" class="headerlink" title="终于确认的 Turing"></a>终于确认的 Turing</h2><p>距离 Nvidia 发布目前主流消费市场上的显卡—— GeForce 10 系列已经过去两年又三个月了，或许是因为竞争对手实在不给力，其推出的 Vega 系列没有撼动 Pascal 系显卡统治地位的能力，又或许是新卡的配套工程出了一些问题，比如制程问题还有 GDDR 6 显存的产量问题。</p><p><img src="/images/Roadmap-2015.jpg" width="75%" alt="2015 年 Roadmap"></p><p>这是一张 2015 年初，Nvidia 发布会上的路线图，上面可以很清楚地看到，Pascal 架构之后是 Volta 架构，横坐标对应着 2018。而 Volta 架构的亮相则是在去年年底，2017 年 12 月 7 日，老黄发布了 Titan V，一张价值 3000 美金的发烧级显卡。就在人们翘首期盼新的基于 Volta 架构的显卡之时，Nvidia 却迟迟没有发布新一代的 GeForce 系列，2018 年整个上半年，无数爱好者被时不时传出的一些 Nvidia 新卡的消息吊足了胃口，连新卡用的架构都有三个说法：Volta、Turing 还是 Ampere？直到 2018 年 8 月 13 日，Volta 之后的新架构 Turing 终于随着新一代 Quadro 专业级显卡正式登场了，而也证实了传闻中的 Turing 架构的真实性，以及爱好者们期待许久的新一代 GeForce 显卡就快要登场了，下面就是综合最近的一些消息对 GeForce 新系列的一些前瞻。</p><p><img src="/images/old-huang-with-QuadroRTX.jpg" width="65%" alt="老黄举着新的 Quadro RTX 显卡"></p><h2 id="RTX"><a href="#RTX" class="headerlink" title="RTX"></a>RTX</h2><p>我们先从命名说起。</p><p>新一代的 Quadro 专业级显卡的命名方式均为 Quadro RTX x000，而早前 Nvidia 注册了关于 RTX 的一些商标，这可能预示着新系列的 GeForce 显卡命名可能在顶级显卡上会放弃使用了十年之久的 GTX 前缀（后缀），而换用 RTX 作为新的前缀。</p><p>那么 RTX 又代表了什么？</p><p><strong>R</strong>ay <strong>T</strong>racing（光线追踪）然后带个 X。</p><p>熟悉游戏图形的朋友可能略微知道，目前桌面级游戏几乎都是基于光栅化的渲染方式，而大家经常看到的一些电影、游戏 CG 在渲染层面则是采用了实时光线追踪的方式。在桌面级平台上实现实时光线追踪这一目标是业界一直努力的一个方向，年初微软在 Windows 10 的更新中也为 DirectX 加入了新的光线追踪 API。而现在 Nvidia 终于将这一技术带到了桌面级平台上面，用业界专家的话来说：</p><blockquote><p>This is a significant moment in the history of computer graphics, Nvidia is delivering real-time ray tracing five years before we had thought possible.  –Jon Peddie, the well-respected CEO of analyst firm JPR and a noted graphics expert </p></blockquote><p><img src="/images/an-example-of-Ray-Tracing.jpg" width="65%" alt="实时光线追踪样图"></p><p>Nvidia 宣称其在新架构上新加入了一种 RT 单元专用于实时光线追踪，新架构在模拟真实世界场景上能 <strong>6 倍</strong>于前代，在实时光线追踪上则能做到 <strong>25 倍</strong>于帕斯卡架构。</p><p>所以 Nvidia 将这一特性作为新一代显卡的前缀来增强宣传作用是完全合理的。</p><p>这是两段近日发布的 Nvidia 的实时光线追踪的 Demo：</p><p><a href="https://www.youtube.com/watch?v=bFUWu387ErM" target="_blank" rel="noopener">https://www.youtube.com/watch?v=bFUWu387ErM</a></p><p><a href="https://www.youtube.com/watch?v=3jb3flTRykQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=3jb3flTRykQ</a></p><p>其中效果我只能用恁牛逼啊来叙述。</p><h2 id="GDDR6-显存"><a href="#GDDR6-显存" class="headerlink" title="GDDR6 显存"></a>GDDR6 显存</h2><p>不像 CPU，GPU 对于高速缓存的依赖非常之高，自 2008 年，HD 48x0 这代开始使用 GDDR5 显存到现在已经过去了十年，业界不断在为 GDDR5 续命，不过近些年来，AMD 在其高端卡上已经使用 HBM 取代了 GDDR5，而 Nvidia 也在 GTX 1080 上首次使用了 GDDR5X ，在 Titan V 上使用了 HBM 2 显存来获取更高的带宽。其继任者 GDDR6 标准在 2017 年 7 月被正式通过了，随后在今年年内，三星、镁光以及海力士这三家显存颗粒主要供应商都宣布开始出货 GDDR6 显存。</p><p>而 13 日 Quadro RTX 系列的发布证实了“Turing 架构将会使用 GDDR6 显存”的传闻，大概至少 GeForce 的旗舰级新卡会用上它吧。</p><h2 id="核心及其他改进"><a href="#核心及其他改进" class="headerlink" title="核心及其他改进"></a>核心及其他改进</h2><p>从现有的 Quadro 新卡来看，完整的 Turing 核心似乎是一个超大的核心，相比于 Pascal，其核心面积大了约 60%，晶体管数量多了约 58%，如果数字太过抽象，那么下面这张图就能很好地帮助你理解 Turing 到底大了多少。然而，即使较 Pascal 而言扩张了相当大的面积，Turing 仍然差 Volta 那么一筹（晶体管数量 21B，核心面积 815mm<sub>2</sub>）。</p><p><img src="/images/pascal-vs-turing.jpg" width="70%" alt="Pascal VS Turing"></p><p><img src="/images/turing-architecture.png" width="70%" alt="Turing 架构图"></p><p>这是官方发布会公布的 Turing 架构图，罗列一下现在已知的改进点：</p><ul><li>NVLINK 带宽增加了</li><li>Tensor 单元（Volta 架构引入的用于人工智能以及机器学习的单元）改进了</li><li>核心缓存改进了</li><li>视频引擎改进</li><li>输出支持 VirtualLink 以及 USB-C，支持新版 DisplayPort</li></ul><h2 id="11x0-or-20x0"><a href="#11x0-or-20x0" class="headerlink" title="11x0 or 20x0"></a>11x0 or 20x0</h2><p>近日，AIDA64 的新版本中包括了一些 Nvidia 的新 GPU，其中 GV 104 就被命名成了 GeForce GTX 1180。</p><p><img src="/images/AIDA64-1180.jpg" width="70%" alt="GeForce GTX 1180"></p><p>然而现在 Turing 架构的正式发布似乎标志着 AIDA64 出错了。首先，按照惯例，如果新一代 GeForce 显卡使用 Turing 架构，那么其核心代号则应该是 GT xxx，考虑到已经出现过 GT 系列核心代号（GeForce 100/200/300 系列），那么可能会使用别的代号也说不定，但是 GV 开头的可能性已经很小了。其次，按照上文 RTX 一节所说，新卡应该会以 RTX 为前缀而非 GTX。</p><p>就在 Quadro 新卡发布之后的 14 日上午，Nvidia GeForce 的官方推特发布了一个新的疑似预告片的<a href="https://twitter.com/NVIDIAGeForce/status/1029164596903337984" target="_blank" rel="noopener">短视频</a>，以 “#BeForTheGame” 命名，视频疑似预告了在 8 月 20 日科隆游戏展上 Nvidia 将会发布新一代桌面级显卡。在视频的第 45 秒，一个一闪而过的聊天信息中发现了有趣的东西：</p><p><img src="/images/video-45s.png" alt="45 秒"></p><p>内容是一个 RayTeX 的玩家和另一个 ID 为 Not_11 的玩家的对话。</p><blockquote><p>RayTeX: new build?</p><p>Not_11: No haha I wish, some got this at work</p><p>RayTeX: you getting on??</p><p>Not_11: eating, gimme 20</p></blockquote><p>两个非常有趣的 ID，一个缩写为 RTX 另一个叫不是 11，可能是官方剧透。最后一句 eating, gimme 20 与其 ID 相呼应，貌似下一代命名为 GeForce RTX 20x0 已经是板上钉钉的事情了。</p><p>但是新卡仍然没有发布，谁知道呢。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;终于确认的-Turing&quot;&gt;&lt;a href=&quot;#终于确认的-Turing&quot; class=&quot;headerlink&quot; title=&quot;终于确认的 Turing&quot;&gt;&lt;/a&gt;终于确认的 Turing&lt;/h2&gt;&lt;p&gt;距离 Nvidia 发布目前主流消费市场上的显卡—— GeF
      
    
    </summary>
    
    
      <category term="Hardware" scheme="https://blog.xinoassassin.me/tags/Hardware/"/>
    
  </entry>
  
  <entry>
    <title>游戏六月</title>
    <link href="https://blog.xinoassassin.me/2018/07/games-in-june/"/>
    <id>https://blog.xinoassassin.me/2018/07/games-in-june/</id>
    <published>2018-07-02T13:52:55.000Z</published>
    <updated>2019-02-03T06:24:46.001Z</updated>
    
    <content type="html"><![CDATA[<p>前略，离上一次码字已经过去一个多月了，期间一直在打游戏，这个六月还有世界杯。</p><p>每年六月头上都是属于玩家们的狂欢节，E3 这个全球最大的游戏展会值得让我颠倒时差去看直播。</p><p>说回来，从五月换了机器之后就开始不断打之前因为机能不够没怎么玩的游戏，到现在打通了 AC3, AC4:BF, ACS 和 GTA5.</p><p>GTA 5, 上个世代最伟大的沙盒游戏之一，就不多吹了。这里说说打通的三作 AC.</p><p>之前在 <a href="https://blog.xinoassassin.me/2017/11/AC-10-year">AC 十周年</a> 一文中，写 AC3 和 ACBF 的部分的时候其实我也就是把那两作打了个开头。如果是现在，我想应该会写更多的个人感受了，比如。</p><p>三代的家园任务是一系列能让人感觉到非常温馨的支线任务，虽然有一些繁复，但是整体给人的感觉就是“有血有肉”，剧情刻画的非常不错，我花了可能有整整一天都跑在这系列任务上了。后来这系列任务可能演变成了城市故事了，比如 Unity 的巴黎故事和 Syndicate 的伦敦故事。但是三代有一点缺憾就是很难让美国人以外的人们感受到自己是美国独立战争几个重大事件的参与者，因为相比于其他几代取材的更广为人知的历史，美国独立战争很多中国玩家可能也就知道个华盛顿，知道个莱克星顿的枪声。还有一点缺陷就是，剧情对于康纳的成长描述的不够，从开始就给玩家一种康纳很成熟很厉害的感觉，这相对于老色鬼三部曲就会产生一个很大的反差。</p><p>再说说黑旗。</p><p>黑旗剧情上很强的一点就是比较成功的描述了爱德华的成长与整个人的变化，从玩世不恭的海盗到一个成熟的刺客，经历了那么多对爱德华整个人是有很深很深的影响的，尤其是玛丽死在他面前的时候。缺憾就是收尾还是略快了，而且如果能把肯威年老的时候遭遇到圣殿刺杀身亡的剧情给做出来就非常圆满了。</p><p>肯威三代的故事是整个刺客信条系列的转折，从老色鬼三部曲中完美的转型，虽然剧情是做的烂了点。又是承上启下，上承戴斯蒙的命运完结，下启巴黎乃至伦敦的故事线，也许在普通玩家看来它们就是普通的沙盒游戏，但是在刺客信条系列粉丝看来，这两作绝不普通。</p><p>最后是昨天打通的 Syndicate.</p><p>为什么我在 Unity 和 Syndicate 这两作上面坚持不用大陆通用的翻译呢？因为我不认同对于这两个标题的翻译。</p><p>ACS 真的是一个非常好的游戏，但是太可惜了，受限于前作的口碑崩塌卖的不好。</p><p>好在哪儿？钩爪，太方便了。英式幽默，太冷了，太讽刺了，太自嘲了。自由度，太高了。支线任务，终于有点小故事的样子了。RPG 系统，有用处了。</p><p>给我印象最为深刻的是最后的 Boss 战，这可能是刺客信条系列历史上做的最出色的一次 Boss 战。之前整个流程都没怎么用上的双子的设定在这场 Boss 战里面似乎终于被制作组想起来了，于是呈现给了我们一场非常精彩的三英战吕布，玩家轮番在雅各布和伊薇的视角里跳来跳去打来打去，最后雅各布和伊薇一起用袖剑杀死了大团长，也代表着他们终于能够抛弃前嫌联手合作了，不过伊薇不久之后就跑去印度跟阿三结婚了。</p><p>不过剧情上面，可能育碧这几年确实缺少剧本写手了。这几年刺客信条被人所诟病的大多还是剧情方面，游戏系统越做越成熟的同时，剧情并没有跟上，从 Unity 的跳水一般的剧情到辛迪加勉强能看的剧情，据说起源的剧情也挺一般。这方面确实有待改进了。</p><p>说完刺客信条，下面聊聊 The Witcher 3: Wild Hunt.</p><p>猎魔人系列是我一直想玩但是一直束之高阁的系列，或者说，对于 CRPG 类型，我一直都是敬而远之。小说长篇还没开看，短篇集倒是看完了。进了游戏打了八小时才刚开个头，这游戏，厉害的很。<del>杰洛特真帅，我老公</del></p><p>说完游戏，再来聊聊硬件。</p><p>Nvidia 的新卡不断有消息，但是估计还是会在年底才能大量上市，价格，不好说，因为以目前 GDDR6 的产能看，价格会很高，但也说不定老黄以他精准的刀法，中端市场推出采用 GDDR5 的卡来拉低定价加强竞争力，不过中端卡最起码也要等到明年三月份了吧。</p><p>国内的 Intel 散片价格也是节节攀升，本来 i5 8400 千元内即可入手，现在已经慢慢升到接近 1100 元的水平，而很有性价比的 i7 8700 也是如此，价格攀升的比较厉害。不过现在开盖换液金的服务倒是挺便宜了，100 左右即可。朋友便宜赞助了我一块 RX 480, 寒假如果能搞一套 8700 平台，那又能跟上时代发展了（误</p><p><code>&gt;&gt;endl;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前略，离上一次码字已经过去一个多月了，期间一直在打游戏，这个六月还有世界杯。&lt;/p&gt;
&lt;p&gt;每年六月头上都是属于玩家们的狂欢节，E3 这个全球最大的游戏展会值得让我颠倒时差去看直播。&lt;/p&gt;
&lt;p&gt;说回来，从五月换了机器之后就开始不断打之前因为机能不够没怎么玩的游戏，到现在
      
    
    </summary>
    
    
      <category term="Game" scheme="https://blog.xinoassassin.me/tags/Game/"/>
    
  </entry>
  
  <entry>
    <title>再见，老伙计；你好，新朋友</title>
    <link href="https://blog.xinoassassin.me/2018/05/new-laptop/"/>
    <id>https://blog.xinoassassin.me/2018/05/new-laptop/</id>
    <published>2018-05-12T13:12:12.000Z</published>
    <updated>2019-02-03T06:24:46.049Z</updated>
    
    <content type="html"><![CDATA[<p>前略，上周日，一次突如其来的停电袭击之后，我那本来就已经处在崩溃边缘的 K610D 终于不得行了，进系统之后必蓝屏，而且此次蓝屏的 Code 还不一样（说实话可能我基本上把 Windows 10 能出现的蓝屏代码全看了一遍了）。花了半天尝试了各种修复后故障依旧，没有办法之下，只得跟父亲申请新机器的资金——其实已经延长了非常久的时间了，自从两年前进过水之后我就知道必然会有这么一天到来的——再花了四分之一天在限定资金下确定了现在这台新伙计，用的蓝天 W65KJ 的模具。<br>配置最基本两个大件新旧对比：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">K610D-i7d2</th><th style="text-align:center">W65KJ</th></tr></thead><tbody><tr><td style="text-align:center">CPU</td><td style="text-align:center">Intel Core i7 4710MQ</td><td style="text-align:center">Intel Core i3 8100</td></tr><tr><td style="text-align:center">GPU</td><td style="text-align:center">NVIDIA GeForce 940M</td><td style="text-align:center">NVIDIA GeForce GTX 1050</td></tr></tbody></table><p>之所以新机器选择了 W65KJ, 原因有二：</p><ol><li><p>散热强劲</p><p>因为用的是桌面级 CPU, 所以 CPU 部分是用了双热管来压的，而且 CPU 与 dGPU 各用了一个风扇来分散热量。之前因为在 K610D 上面吃尽了散热差的苦头，所以这次舍弃了拥有更好扩展接口的另一个型号，也要散热系统非常强劲。</p><p>测试下来非常令我满意，在风扇全开的情况下能把 CPU 压在 65 度附近，四核频率稳定标称的 3.6 GHz 运行，dGPU 也压的非常好。</p></li><li><p>可扩展性强</p><p>因为用的是桌面级 Core 8 代 CPU, 所以机器上直接给了两个 M.2 接口，两个均支持 NVMe 协议。而且因为散热系统仍有余裕，所以后续升级至 Core i5 是非常可行的提升性能的办法，甚至 i7 都有一试之力。</p></li></ol><p>京东速度还算是不错，第二天周一中午机器到手的时候是 8GB 2400 的英睿达单条 DDR4 内存加上一条金士顿的 128 GB 的 TLC 条子，成本原因自然是走 SATA 协议的，但是够用是够用了，就是容量太小了，于是当天下午就下单了另一条英睿达 DDR4 2400 8GB 和三星的 SM961 256GB, 最谢天谢地的是最近的内存条和 SSD 都有一些降价，不然得是大出血。</p><p>犹豫是周一下午五点——一般快递停收时间——之后才淘宝下的单，所以内存到了周五才到，而 SM961 却到了周三还没发货，咨询了卖家：“没货，明天或者后天到”。我可去你妈的，换店，之前物色 NVMe SSD 的时候在 XG3 和 SM961 之间纠结，然后这时候在淘宝上看到一家拆机 XG3 512GB 才卖九百出头的店，果断付款。</p><p>然后今天周六下午，终于是到手了。赶紧插上装好东芝家的驱动跑个分，果然 NVMe + MLC 的组合数据上非常吓人。马上迁移系统，结果文件都是复制完了却在启动上栽了跟头。</p><h2 id="系统迁移引导处理"><a href="#系统迁移引导处理" class="headerlink" title="系统迁移引导处理"></a>系统迁移引导处理</h2><p>在 UEFI + GPT 环境下直接复制全盘复制文件到新分区是可行的，前提是你的 NVMe 在原来的系统中要被认过一次，系统的设备管理器中的“存储控制器”一项出现了 NVMe 控制器，这是迁移可行的大前提。</p><p>文件复制完毕之后，你还需要做两个事情，否则，是进不去新驱动器上的系统的：</p><h3 id="改变注册表中默认分配盘符"><a href="#改变注册表中默认分配盘符" class="headerlink" title="改变注册表中默认分配盘符"></a>改变注册表中默认分配盘符</h3><p>首先你需要一个可用的注册表编辑器，定位到 <code>HKLM\SYSTEM\MountedDevices</code> 下，将 <code>\DosDevices\新系统所在的盘符:</code> 的值复制下来。挂载上新系统的注册表文件（通过文件-加载配置单元读取 <code>Windows\System32\Config\SYSTEM</code> 文件），然后定位到相同的项，将之前复制的值覆盖掉 <code>\DosDevices\C:</code> 的值即可。</p><h3 id="写入新的-BCD-配置"><a href="#写入新的-BCD-配置" class="headerlink" title="写入新的 BCD 配置"></a>写入新的 BCD 配置</h3><p>然后你需要一块系统安装盘，启动到系统安装界面，调出命令行(Shift + F10), 然后将新系统所在的分区的盘符挂成 “C”, 同时要给新硬盘上的 ESP 分区分配一个盘符，使程序能够写入文件，大概过程如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk &apos;查看磁盘列表</span><br><span class="line">sele disk x &apos;x 是你新磁盘在列表中的编号</span><br><span class="line">list part</span><br><span class="line">sele part x &apos;x 是你新系统所在的分区编号</span><br><span class="line">assign letter=C &apos;分配新系统所在分区的盘符为 C</span><br><span class="line">sele part y &apos;y 是这块磁盘上的 ESP 分区编号</span><br><span class="line">assign letter=Y &apos;给 ESP 分区分配 Y 的盘符</span><br><span class="line">exit &apos;退出 diskpart</span><br><span class="line">bcdboot C:\windows /s Y: [/v] &apos;将 C:\Windows 作为启动目录写入到 Y: 上，&quot;/v&quot; 为可选参数，即详细模式</span><br></pre></td></tr></table></figure><p>重启之后就搞定了。</p><hr><p>那么，这台机子就这么算是正式启用了吧，之后会攒钱买块 Core i5 给换上就算是完全大功告成了，但愿它能陪我长一些时间吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前略，上周日，一次突如其来的停电袭击之后，我那本来就已经处在崩溃边缘的 K610D 终于不得行了，进系统之后必蓝屏，而且此次蓝屏的 Code 还不一样（说实话可能我基本上把 Windows 10 能出现的蓝屏代码全看了一遍了）。花了半天尝试了各种修复后故障依旧，没有办法之下
      
    
    </summary>
    
    
      <category term="Hardware" scheme="https://blog.xinoassassin.me/tags/Hardware/"/>
    
  </entry>
  
  <entry>
    <title>杂（四）</title>
    <link href="https://blog.xinoassassin.me/2018/04/something-3/"/>
    <id>https://blog.xinoassassin.me/2018/04/something-3/</id>
    <published>2018-04-22T15:14:00.000Z</published>
    <updated>2019-02-03T06:24:46.098Z</updated>
    
    <content type="html"><![CDATA[<p>烦躁的很。</p><p>最近心头一直堵着，有形无形的压力大到快把我压垮了。</p><p>首先列一个 To Do List:</p><ol><li>财务案例分析</li><li>资产评估报告</li><li>财务英语报告</li><li>数学重修考试</li><li>初级会计考试</li></ol><p>除了第四个是年轻犯下的错误之外，其他都是与这个我一点都不喜欢的专业相关的内容，我<strong>一点</strong>都不想做，但奈何，这是必须要完成的，尤其是前三个还是小组作业——别人都想要划水就我想认真做的那种。</p><p>内心的压力大到什么程度，我每晚二点前才将将睡着，早上七点半左右准时醒来，即使每天跑五圈还是不能让我早睡哪怕半小时。</p><p>这些杂七杂八的专业相关让我没有任何足够的空闲来学习别的东西，练手用的机核网电台收听器已经搁置了一个月没动过一行代码了，而年初定下的 RaidFinder 更是八字没有一撇——我会另写一篇博文来讲述这几个月碰到的曲折。</p><p>从三月末开始我就不断地在投实习简历，有一家上海的，很中意很想做的实习编辑，却因为时间问题，连去面试的机会都没有，而投出的其他简历则是一点回声都没有。今天我还是想通了，剩下的时间不如好好钻研代码，精通个一种 WebApp 框架就能让自己在就业的时候好过一些，最起码比这个做财务的强。</p><p>归根结底还是自己浪费了太多的时间，如果从高考完就意志坚定的学习代码，现在靠朋友内推应该已经拿到个实习机会了，怎么也比现在成天操心自己毕业实习那个章怎么办来的强。</p><p>不过我倒是不会把写博客的时间归于浪费，多码点字能让人的逻辑思维更加清晰，水文章来的更快，也是一种释放压力的好方式，虽然大概也没几个人看吧（笑）。</p><p>内心的烦躁大部分还是来自于就业，我看不到未来的路，一片迷茫。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;烦躁的很。&lt;/p&gt;
&lt;p&gt;最近心头一直堵着，有形无形的压力大到快把我压垮了。&lt;/p&gt;
&lt;p&gt;首先列一个 To Do List:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;财务案例分析&lt;/li&gt;
&lt;li&gt;资产评估报告&lt;/li&gt;
&lt;li&gt;财务英语报告&lt;/li&gt;
&lt;li&gt;数学重修考试&lt;/li&gt;

      
    
    </summary>
    
    
      <category term="杂" scheme="https://blog.xinoassassin.me/tags/%E6%9D%82/"/>
    
  </entry>
  
</feed>
